<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeMasterProCloud.Api</name>
    </assembly>
    <members>
        <member name="T:DeMasterProCloud.Api.Controllers.AccessGroupController">
            <summary>
            Access group controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.#ctor(DeMasterProCloud.Service.IAccessGroupService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IVisitService,DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.IAccessGroupDeviceService,AutoMapper.IMapper,DeMasterProCloud.Service.IPluginService)">
            <summary>
            Constructor for inject services
            </summary>
            <param name="accessGroupService"></param>
            <param name="contextAccessor"></param>
            <param name="visitService"> service of visit </param>
            <param name="departmentService"></param>
            <param name="accessGroupDeviceService"></param>
            <param name="mapper"></param>
            <param name="pluginService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            List all access group with pagination
            </summary>
            <param name="search">Query string that filter Access Group by Name.</param>
            <param name="doorIds">Door Ids</param>
            <param name="userIds">User Ids</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.Get(System.Int32)">
            <summary>
            Get a access group by id
            </summary>
            <param name="id">Access Group Id</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not found: Access group Id does not exist.</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.GetAssignDoors(System.Int32,System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of doors with access group by id
            </summary>
            <param name="id">Access Group Id</param>
            <param name="search">Query string that filter Doors by Device Address, Name, Timezone or Building</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.GetUnAssignDoors(System.Int32,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of doors unassigned with access group by id
            </summary>
            <param name="id">Access Group Id</param>
            <param name="search">Query string that filter Doors by Device Address, Name or Building</param>
            <param name="operationType"></param>
            <param name="buildingIds"></param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.GetUnAssignDoorsForVisit(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Get list of all doors by accessGroupId for visit
            </summary>
            <param name="id">Access Group Id</param>
            <param name="search">Query string that filter Doors by Building Name</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="onlyDefaultDoor">If using onlyDefaultDoor = true, list device response: default door config page visit setting</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.GetAssignUsers(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of all users with access group by id
            </summary>
            <param name="id">Access Group Id</param>
            <param name="search">Query string that filter Users by UserName, Department Name or CardId</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.GetUnAssignUsers(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of all users unassigned with access group by id
            </summary>
            <param name="id">Access Group Id</param>
            <param name="search">Query string that filter Users by UserName, Department Name or Access Group Name</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.Add(DeMasterProCloud.DataModel.AccessGroup.AccessGroupModel)">
            <summary>
            Add new access group
            Note: This API uses JWT Bearer authentication via Authorization header, not cookies.
            Therefore, CSRF protection is not applicable.
            </summary>
            <param name="model">JSON model for Access Group</param>
            <returns></returns>
            <response code="201">Create new access group success</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Access Group Name exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.Edit(System.Int32,DeMasterProCloud.DataModel.AccessGroup.AccessGroupModel)">
            <summary>
            Edit a access group
            </summary>
            <param name="id">Access Group Id</param>
            <param name="model">JSON model for Access Group</param>
            <returns></returns>
            <response code="400">Bad Request: Access Group Name exist.</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Access Group Id bot found from DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.Delete(System.Int32)">
            <summary>
            Delete a access group
            </summary>
            <param name="id">Access Group Id</param>
            <returns></returns>
            <response code="200">Delete a access group success</response>
            <response code="400">Bad Request: Access Group could not delete</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Access Group Id bot found from DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete list access group
            </summary>
            <param name="ids">list ids of access group</param>
            <returns></returns>
            <response code="200">Delete list access group success</response>
            <response code="400">Bad Request: List of Access Group Ids include one or more Access Group could not delete</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List ids do not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.AssignUsers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Assign users to an access group
            </summary>
            <param name="id">       Access group identifier. </param>
            <param name="userIds">  List of identifiers for the users. </param>
            <returns>   An IActionResult. </returns>
            <response code="400">Bad Request: Access group Id does not exist, list of User Ids empty or user assigned for access group</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.AssignDoors(System.Int32,DeMasterProCloud.DataModel.AccessGroup.AccessGroupAssignDoor)">
            <summary>
            Assign doors to an access group
            </summary>
            <param name="id">Access Group Id</param>
            <param name="model">JSON model for (doorId, timezoneId and companyId)</param>
            <returns></returns>
            <response code="400">Bad Request: Access group Id does not exist, model of the doors empty</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.UnAssignDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Remove doors from an access group
            </summary>
            <param name="id">Access Group Id</param>
            <param name="doorIds">List of ids with doors</param>
            <returns></returns>
            <response code="400">Bad Request: Access group Id does not exist, model of the doors empty</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.UnAssignUsers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Remove users from an access group
            </summary>
            <param name="id">Access Group Id</param>
            <param name="userIds">List of ids with users</param>
            <returns></returns>
            <response code="400">Bad Request: Access group Id does not exist, list of User Ids empty or user assigned for access group</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.RemoveDeviceFromAllAccessGroup(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete devices from all access groups
            </summary>
            <param name="doorIds"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessGroupController.AddAccessGroupByAccessTimeName(System.Collections.Generic.List{System.String})">
            <summary>
            Add access group -> assign door with access time names (apply to HVQY)
            </summary>
            <param name="accessTimeNames"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.#ctor(DeMasterProCloud.Service.IAccessScheduleService,DeMasterProCloud.Service.IDeviceService,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IAccountService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.IAccessGroupService)">
            <summary>
            
            </summary>
            <param name="accessScheduleService"></param>
            <param name="deviceService"></param>
            <param name="userService"></param>
            <param name="accountService"></param>
            <param name="httpContextAccessor"></param>
            <param name="departmentService"></param>
            <param name="accessGroupService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.GetInit">
            <summary>
            Get init accessSchedule page
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of accessSchedule with company
            </summary>
            <param name="content">Content of accessSchedule</param>
            <param name="userIds">List of user ids</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.Get(System.Int32)">
            <summary>
            Get accessSchedule by id
            </summary>
            <param name="id">AccessSchedule Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.Add(DeMasterProCloud.DataModel.AccessSchedule.AccessScheduleModel)">
            <summary>
            Add new accessSchedule
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.Edit(System.Int32,DeMasterProCloud.DataModel.AccessSchedule.AccessScheduleModel)">
            <summary>
            Edit accessSchedule
            </summary>
            <param name="id">AccessSchedule Id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.Delete(System.Int32)">
            <summary>
            Delete accessSchedule
            </summary>
            <param name="id">AccessSchedule Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.DeleteRange(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete list accessSchedules
            </summary>
            <param name="ids">List of ids accessSchedule</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.GetUsersOfAccessSchedule(System.Int32)">
            <summary>
            Get all users of accessSchedule
            </summary>
            <param name="id">AccessSchedule Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.GetAssignUsers(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of all users with accessSchedule by id
            </summary>
            <param name="id">AccessSchedule Id</param>
            <param name="search">Query string that filter Users by UserName, Department Name or CardId</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.GetUnAssignUsers(System.Int32,System.Collections.Generic.List{System.Int32},System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of all users unassigned with accessSchedule by id
            </summary>
            <param name="id">AccessSchedule Id</param>
            <param name="idsIgnore"></param>
            <param name="search">Query string that filter Users by UserName, Department Name or AccessSchedule Name</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessScheduleController.AssignUsers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Assign users to an accessSchedule
            </summary>
            <param name="id">       accessSchedule identifier. </param>
            <param name="userIds">  List of identifiers for the users. </param>
            <returns>   An IActionResult. </returns>
            <response code="400">Bad Request: AccessSchedule Id does not exist, list of User Ids empty or user assigned for accessSchedule</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.AccessTimeController">
            <summary>
            AccessTime Controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IAccessTimeService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IDeviceService)">
            <summary>
            Timezone controller
            </summary>
            <param name="accessTimeService"></param>
            <param name="httpContextAccessor"></param>
            <param name="deviceService"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            List all Timezones with pagination
            </summary>
            <param name="search">Query string that filter Access Group by AccessTime or Remark.</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.Get(System.Int32)">
            <summary>
            Get detail timezone by id
            </summary>
            <param name="id">Timezone id</param>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not found: Timezone Id does not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.Add(DeMasterProCloud.DataModel.Timezone.AccessTimeModel)">
            <summary>
            Add a new timezone
            </summary>
            <param name="model">JSON model for Timezone (from-to are installed by minute). Ex: 0h00 - 23h59m --> from 0 - to 1439</param>
            <response code="400">Bad Request: Length of timezone with company must lesser than max number of timezone setting</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.Edit(System.Int32,DeMasterProCloud.DataModel.Timezone.AccessTimeModel)">
            <summary>
            Edit timezone
            </summary>
            <param name="id">timezone id to edit</param>
            <param name="model">JSON model for Timezone (from-to are installed by minute). Ex: 0h00 - 23h59m --> from 0 - to 1439</param>
            <response code="400">Bad Request: position of timezone equals default passage or default active</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not found: Timezone Id does not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.Delete(System.Int32)">
            <summary>
            Delete timezone
            </summary>
            <param name="id">timezone id to delete</param>
            <response code="400">Bad Request: position of timezone equals default passage or default active</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not found: Timezone Id does not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Timezone multiple delete
            </summary>
            <param name="ids">list of timezone ids to delete</param>
            <returns></returns>
            <response code="400">Bad Request: Exist a or more timezone cannot delete</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not found: List of timezone does not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.AddAccessTimeHvqy(DeMasterProCloud.DataModel.Timezone.AccessTimeModel)">
            <summary>
            Add a new access time for hvqy
            </summary>
            <param name="model">JSON model for Timezone (from-to are installed by minute). Ex: 0h00 - 23h59m --> from 0 - to 1439</param>
            <response code="400">Bad Request: Length of timezone with company must lesser than max number of timezone setting</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.AssignAccessTimeHvqy(DeMasterProCloud.DataModel.Timezone.AssignAccessTime)">
            <summary>
            Assign a access time for user
            </summary>
            <param name="model">JSON model for Timezone (from-to are installed by minute). Ex: 0h00 - 23h59m --> from 0 - to 1439</param>
            <response code="400">Bad Request: Length of timezone with company must lesser than max number of timezone setting</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccessTimeController.UnAssignAccessTimeHvqy(DeMasterProCloud.DataModel.Timezone.AssignAccessTime)">
            <summary>
            Assign a access time for user
            </summary>
            <param name="model">JSON model for Timezone (from-to are installed by minute). Ex: 0h00 - 23h59m --> from 0 - to 1439</param>
            <response code="400">Bad Request: Length of timezone with company must lesser than max number of timezone setting</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.AccountController">
            <summary>
            Define a login route for api app
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.#ctor(DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IAccountService,DeMasterProCloud.Service.IRoleService,DeMasterProCloud.Service.ICameraService,DeMasterProCloud.Service.ISettingService,DeMasterProCloud.Service.IJwtHandler,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.ISystemInfoService,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="companyService"></param>
            <param name="accountService"></param>
            <param name="roleService"></param>
            <param name="cameraService"></param>
            <param name="settingService"></param>
            <param name="jwtHandler"></param>
            <param name="httpContextAccessor"></param>
            <param name="userService"></param>
            <param name="systemInfoService"></param>
            <param name="configuration"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Login(DeMasterProCloud.DataModel.Login.LoginModel)">
            <summary>
            Login by account and password
            </summary>
            <param name="model">JSON model for login(username, password)</param>
            <returns></returns>
            <response code="401">Unauthorized: username or password wrong</response>
            <response code="422">Unprocessable Entity: Model Body required username and password</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.SecondLogin(DeMasterProCloud.DataModel.Login.LoginModelWithCompany)">
            <summary>
            Login by company and token temporary
            </summary>
            <param name="model">JSON model for login(companyId and temporary token)</param>
            <returns></returns>
            <response code="401">Unauthorized: companyId or account in temporaryToken does not exist</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response cdoe="500">Internal Server Error: temporaryToken not valid</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.RefreshToken(System.String,System.String)">
            <summary>
            Refresh token
            </summary>
            <param name="refreshToken">String of token refreshed</param>
            <param name="expiredToken">String timezone by expired of token</param>
            <returns></returns>
            <response code="401">Unauthorized: refreshToken or expiredToken not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.SwitchCompany(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Switch company
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: String Bearer Token requirement</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Gets(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Get list of Accounts with pagination
            </summary>
            <param name="search">Query string that filter by username or email</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="companyIds">List of company ids</param>
            <param name="ignoreApprovalVisit">Ignore list account approval of visit setting</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Get(System.Int32)">
            <summary>
            Get Account (or company account) information
            </summary>
            <param name="id"> an identifier of company account </param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetProfile">
            <summary>
            Get Account profile information
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Add(DeMasterProCloud.DataModel.Account.AccountModel)">
            <summary>
            Add a account.
            </summary>
            <param name="model">JSON model for Account</param>
            <returns></returns>
            <response code="201">Create new item success</response>
            <response code="400">Bad Request: company does not exist</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Edit(System.Int32,DeMasterProCloud.DataModel.Account.AccountModel)">
            <summary>
            Edit the account information.
            </summary>
            <param name="id"> identifier of companyAccount </param>
            <param name="model">JSON model for company account</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not Found: Id not exist in DB</response>
            <response code="422">unprocessable Entity: Email exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.UploadAvatar(DeMasterProCloud.DataModel.Account.AccountAvatarModel)">
            <summary>
            Update image for user
            </summary>
            <param name="model">Object model json include avatar</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="400">Bad Request: Avatar not string.Empty</response>
            <response code="404">Not Found: Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetAvatar">
            <summary>
            Get avatar for user
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.EditProfile(DeMasterProCloud.DataModel.Account.AccountModel)">
            <summary>
            Edit the account profile information.
            </summary>
            <param name="model"></param>
            <returns></returns>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Id or data model wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Delete(System.Int32)">
            <summary>
            Delete a account.
            </summary>
            <param name="id">Account identifier</param>
            <returns></returns>
            <response code="400">Bad Request: Account is not allow delete</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multiple accounts.
            </summary>
            <param name="ids">List of account ids</param>
            <returns></returns>
            <response code="400">Bad Request: Account not allow delete</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not found: List of Ids do not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.ForgotPassword(DeMasterProCloud.DataModel.Login.ForgotPasswordModel)">
            <summary>
            When forgot password
            </summary>
            <param name="model">JSON model for string of email login</param>
            <returns></returns>
            <response code="400">Bad Request: Email does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.ResetPassword(DeMasterProCloud.DataModel.Login.ResetPasswordModel)">
            <summary>
            Reset password
            </summary>
            <param name="model">JSON model for object(new password, confirm new password and token string)</param>
            <returns></returns>
            <response code="400">Bad Request: Email does not exist or wrong token</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetListTimeZone">
            <summary>
            Get time zone
            </summary>
            <returns></returns>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetPreferredSystem">
            <summary>
            Get preferred system options
            </summary>
            <returns></returns>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.UpdateTimeZone(DeMasterProCloud.DataModel.Account.AccountTimeZoneModel)">
            <summary>
            Updated Time Zone for User preferences page
            </summary>
            <param name="model">JSON model for timezone string</param>
            <returns></returns>
            <response code="400">Bad Request: Timezone empty</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Wrong token</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetVersionSystem">
            <summary>
            Get version of system
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetPrimaryAccounts(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                 gets primary accounts.
            </summary>
            <param name="search">Query string that filter Account by Username(email).</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns>   The primary accounts. </returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetAccountType">
            <summary>
            Get account type
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetApprovalAccounts">
            <summary>
            Get approval accounts
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetAccessApprovalAccounts">
            <summary>
            Get access approval accounts
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.ChangePasswordLogin(DeMasterProCloud.DataModel.Account.ChangePasswordLoginModel)">
            <summary>
            Change password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.ChangePasswordWithoutLogin(DeMasterProCloud.DataModel.Account.ChangePasswordModel)">
            <summary>
            Change password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.ResetDefaultTimezone">
            <summary>
            Reset default time zone for user company
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetLastLogin">
            <summary>
            Get last login of account
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetTokenWithAccount(DeMasterProCloud.DataModel.Account.AccountGetTokenModel)">
            <summary>
            Get token with username (military number)
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetCountReviewWithAccount">
            <summary>
            get count visit, user waiting for review
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.Logout">
            <summary>
            Logout (clear current login info)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.SetRootAccount(System.String,System.Boolean)">
            <summary>
            Set the account as root account.
            </summary>
            <param name="username"> account's name </param>
            <param name="isRoot"></param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not Found: Id not exist in DB</response>
            <response code="422">unprocessable Entity: Email exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetVisitApprovalAccounts(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get list of accounts that have permission to approve visitor.
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.GetUserApprovalAccounts(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get list of accounts that have permission to approve user.
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AccountController.UpdateDeviceToken(System.String)">
            <summary>
            Update device token (firebase)
            </summary>
            <param name="deviceToken"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.AttendanceController">
            <summary>
            Attendance controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetInit">
            <summary>
            Get init page attendances management
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.Get(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Get Attendance of Users with company
            </summary>
            <param name="search">Query string that filter Attendance by Name</param>
            <param name="departmentId">Id of department</param>
            <param name="attendanceType">Type of Attendance</param>
            <param name="timezone">String of Timezone</param>
            <param name="start">String time start</param>
            <param name="end">String time end</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <param name="userId">UserId: Id of user</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetById(System.Int32)">
            <summary>
            Get attendance report detail by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.Recalculate(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Re-Calculate Attendances about search data.
            </summary>
            <param name="search">Query string that filter Attendance by Name</param>
            <param name="departmentId">Id of department</param>
            <param name="attendanceType">Type of Attendance</param>
            <param name="timezone">String of Timezone</param>
            <param name="start">String time start</param>
            <param name="end">String time end</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <param name="userId">UserId: Id of user</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetAccessHistory(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of Access history of User with attendance by id
            </summary>
            <param name="id">identified of attendance</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not Found: User does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.Recheck(System.Int32,System.String,System.String)">
            <summary>
            Load old event log to attendance list
            </summary>
            <param name="companyId">identified of company</param>
            <param name="fromAccessTime">String of time start</param>
            <param name="toAccessTime">String of time end</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.SettingRecheck(System.Int32)">
            <summary>
            Get setting param recheck attendance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.SettingRecheck(System.Int32,DeMasterProCloud.DataModel.Attendance.SettingRecheckAttendance)">
            <summary>
            Setting param recheck attendance
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.Edit(System.Int32,DeMasterProCloud.DataModel.Attendance.AttendanceModel)">
            <summary>
            Edit Attendance 
            </summary>
            <param name="id">identified of attendance</param>
            <param name="model">JSON model for object(type attendance, string of time in, string of time out)</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Attendance Id does not exist in DB</response>
            <response code="422">Unprocessable Entity: Wrong data of clock in and out</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetListTypesReport">
            <summary>
            Get list type report attendance
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetAttendanceRecordEachUser(System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Get users with Attendance
            </summary>
            <param name="start">String time start</param>
            <param name="end">String time end</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Attendance Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetAttendanceSetting">
            <summary>
            Get attendance setting for company
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Attendance Setting Id does not exist in DB</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.UpdateAttendanceSetting(DeMasterProCloud.DataModel.Attendance.AttendanceSettingModel)">
            <summary>
            Update approval accounts for attendance setting
            </summary>
            <param name="model">JSON model for AttendanceSettingModel</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.AddLeaveRequest(DeMasterProCloud.DataModel.Attendance.LeaveRequestModel)">
            <summary>
            Manager can create new leave request for user
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.RegisterMyLeaveAttendance(DeMasterProCloud.DataModel.Attendance.AttendanceRegister)">
            <summary>
            Employee can create attendance leave request
            </summary>
            <param name="model"></param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.DeleteMultiLeaveAttendance(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete leave requests by ids
            </summary>
            <param name="ids">list of leave request ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.DeleteMyAttendance(System.Int32)">
            <summary>
            Delete request attendance leave
            </summary>
            <param name="id">Id attendance</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Record attendance leave can't delete</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.EditAttendanceLeave(System.Int32,DeMasterProCloud.DataModel.Attendance.LeaveRequestModel)">
            <summary>
            Edit request attendance leave
            </summary>
            <param name="id">Id attendance</param>
            <param name="model">JSON Model Attendance Leave</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetLeaveAttendance(System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get leave request page attendance
            </summary>
            <param name="search">string of username</param>
            <param name="attendanceType">string list of type attendance</param>
            <param name="start">date time start</param>
            <param name="end">date time end</param>
            <param name="status">status attendance leave (default 0: get all attendances (AttendanceStatus = 1,2,3))</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetLeaveAttendanceUser(System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get leave request page attendance for user
            </summary>
            <param name="search">string of username</param>
            <param name="attendanceType">string list of type attendance</param>
            <param name="start">date time start</param>
            <param name="end">date time end</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.UpdateRequestLeave(System.Int32,DeMasterProCloud.DataModel.Attendance.ActionApproval)">
            <summary>
            Accept or Reject request leave attendance
            </summary>
            <param name="id">Attendance id</param>
            <param name="model">Boolean accept request</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.InitPageAttendanceLeave">
            <summary>
            Get parameter init in page attendance leave request
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response> 
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetAttendanceTypeList">
            <summary>
            Get all of list attendance types
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetAttendancesEveryMonth(System.String,System.DateTime,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get Attendance of Users with company every month
            </summary>
            <param name="search">Query string that filter by UserName</param>
            <param name="month">Query attendance of month</param>
            <param name="departmentIds">Id of department</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetLeaveReportYear(System.String,System.String,System.DateTime,System.DateTime,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get report total leave request of users
            </summary>
            <param name="search"></param>
            <param name="year"></param>
            <param name="endDate"></param>
            <param name="departmentIds"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <param name="startDate"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetLeaveAttendanceByUserId(System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get history leave request of user
            </summary>
            <param name="id">user id</param>
            <param name="search"></param>
            <param name="attendanceType"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetLeaveRequestSetting">
            <summary>
            Get leave request setting
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.UpdateLeaveRequestSetting(DeMasterProCloud.DataModel.Attendance.LeaveSettingModel)">
            <summary>
            update leave request setting
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.SetStartTime(System.String)">
            <summary>
            Set StartTime to check attendance
            </summary>
            <param name="startTime"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.AttendanceController.GetStartTime">
            <summary>
            Get StartTime to check attendance
            </summary>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.BuildingController">
            <summary>
            Building controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IBuildingService,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Building controller
            </summary>
            <param name="configuration"></param>
            <param name="buildingService"></param>
            <param name="httpContextAccessor"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            GET /buildings : return all existing buildings with paging and sorting
            <summary>
            Get list of Buildings with pagination
            </summary>
            <param name="search">Query string that filter Building by Name</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.Get(System.Int32)">
            GET /buildings : return all existing buildings with paging and sorting
            <summary>
            Get Building by id
            </summary>
            <param name="id">identified of Building</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not Found: Id Building does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetDoors(System.Int32,System.String,System.Int16,System.Int32,System.Int32,System.String,System.String)">
            GET /buildings/{id} : return all existing doors of a building with paging and sorting
            <summary>
            Get list of doors list in a building(by id building)
            </summary>
            <param name="id">Identified of Building</param>
            <param name="search">Query string that filter Door in Building by door name, device address, activeTZ or PassageTZ</param>
            <param name="operationType"></param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetBuildingsDoors(System.Collections.Generic.List{System.Int32},System.String,System.Int16,System.Int32,System.Int32,System.String,System.String)">
            GET /buildings/{id} : return all existing doors of a building with paging and sorting
            <summary>
            Get list of doors list in a building(by id building)
            </summary>
            <param name="ids"> list of building identifier </param>
            <param name="search">Query string that filter Door in Building by door name, device address, activeTZ or PassageTZ</param>
            <param name="operationType"></param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.ExportBuildingsDoors(System.Collections.Generic.List{System.Int32},System.String,System.Int16,System.String,System.String,System.String)">
            <summary>
            Export list of doors in buildings (by building ids)
            </summary>
            <param name="ids"> list of building identifier </param>
            <param name="search">Query string that filter Door in Building by door name, device address, activeTZ or PassageTZ</param>
            <param name="operationType"></param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="type"> file type : excel, csv, ... </param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetAccessibleDoors(System.Int32,System.String,System.Int16,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of accessible-doors list in a building(by id building)
            </summary>
            <param name="id">Identified of Building</param>
            <param name="search">Query string that filter Door in Building by door name, device address, activeTZ or PassageTZ</param>
            <param name="operationType"></param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetUnAssignDoors(System.Int32,System.String,System.Int16,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get all unassigned doors in specific building with pagination.
            </summary>
            <param name="id">Building Id</param>
            <param name="search">Query string that filter Door in Building by door name, device address or building name</param>
            <param name="operationType"> Flag indicating what mode of operation the device is in </param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.Add(DeMasterProCloud.DataModel.Building.BuildingModel)">
            POST /buildings/creation : Create new building
            <summary>
            Add building
            </summary>
            <param name="model">JSON model for Building</param>
            <returns></returns>
            <response code="201">Create new a building success</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="422">Unprocessable Entity: Model Json not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.AddDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            POST /buildings/door-creation/{id} : Create new door
            <summary>
            Add door(s) to a building
            </summary>
            <param name="id">Building Id</param>
            <param name="doorIds">List of door ids</param>
            <returns></returns>
            <response code="400">Bad Request: id must be non-zero and list of door ids with mode not empty</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.Edit(System.Int32,DeMasterProCloud.DataModel.Building.BuildingModel)">
            PUT /buildings/{id}/edit-building : Edit a building's name
            <summary>
            Edit information of a building
            </summary>
            <param name="id">Building Id</param>
            <param name="model">JSON model for Building</param>
            <returns></returns>
            <response code="400">Bad request: Model or Id Building not empty</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.Delete(System.Int32)">
            DELETE /buildings/{id}/delete : delete a building
            <summary>
            Delete a building
            </summary>
            <param name="id">Building Id</param>
            <returns></returns>
            <response code="400">Bad request: Id must be non-zero and differance default of building id(head quarter = 1)</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete list access group
            </summary>
            <param name="ids">List of Building Ids</param>
            <returns></returns>
            <response code="400">Bad Request: List of Ids must including Default building id = 1</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="404">Not Found: List of Ids do not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.DeleteDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Unassign door from a building
            </summary>
            <param name="id">Building Id</param>
            <param name="doorIds">List of door Ids(assigned for building)</param>
            <returns></returns>
            <response code="400">Bad Request: id must be non-zero and list of door ids with mode not empty</response>
            <response code="401">Unauthorized: Token not invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetBuildingHierarchy(System.String,System.Int32,System.Int32,System.String,System.String,System.Int16)">
            <summary>
            Get list building tree
            </summary>
            <param name="search">Query string that filter Building by Name</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.BuildingController.GetListBuildingWithLevel(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get building with level
            </summary>
            <param name="level">
            Level building: 0 - Building, 1 - Zone, 2 - Place
            </param>
            <param name="search">Query string that filter Building by Name</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.CameraController">
            <summary>
            Define api camera
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.ICameraService,DeMasterProCloud.Service.IDeviceService)">
            <summary>
            
            </summary>
            <param name="httpContextAccessor"></param>
            <param name="cameraService"></param>
            <param name="deviceService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.GetInit">
            <summary>
            Get init page cameras
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of camera
            </summary>
            <param name="search">search string by name</param>
            <param name="types">types of camera</param>
            <param name="deviceIds"></param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.Add(DeMasterProCloud.DataModel.Device.CameraModel)">
            <summary>
            add new camera
            </summary>
            <param name="model">Json model camera</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.Update(System.Int32,DeMasterProCloud.DataModel.Device.CameraModel)">
            <summary>
            edit camera by id
            </summary>
            <param name="id">camera id</param>
            <param name="model">Json model camera</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.Delete(System.Int32)">
            <summary>
            delete camera by id
            </summary>
            <param name="id">camera id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.RecheckCameraEventLog(System.String,System.String,System.String,System.String)">
            <summary>
            ReCheck cameras event-log
            </summary>
            <param name="fromDate">Date start (yyyy-mm-DD)</param>
            <param name="fromTime">Time start (hh:mm:ss)</param>
            <param name="toDate">Date end (yyyy-mm-DD)</param>
            <param name="toTime">Time end (hh:mm:ss)</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CameraController.GetCameraHistory(System.Int32,System.Int32,System.Int32)">
            <summary>
            get camera histories
            </summary>
            <param name="id"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.CommonController">
            <summary>
            Common Controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CommonController.#ctor(DeMasterProCloud.Service.ISettingService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Common controller
            </summary>
            <param name="settingService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CommonController.GetCurrentLogo">
            <summary>
            Get current Logo
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CommonController.GetCurrentQRLogo">
            <summary>
            Get current Logo
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CommonController.Get">
            <summary>
            Get Common Setting
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.CompanyController">
            <summary>
            Company Controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.#ctor(DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IVisitService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IUnregistedDeviceService,DeMasterProCloud.Service.IDeviceService,AutoMapper.IMapper)">
            <summary>
            Company controller
            </summary>
            <param name="companyService"></param>
            <param name="visitService"></param>
            <param name="httpContextAccessor"></param>
            <param name="unregistedDeviceService"></param>
            <param name="deviceService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.Get(System.Int32)">
            <summary>
            Get the Company information
            </summary>
            <param name="id">Identified of Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of Companies with pagination.
            </summary>
            <param name="search">Query string that filter Company by Name or Code.</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Data filtered by string of search does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetInfomation(System.Int32)">
            <summary>
            Get Company information
            </summary>
            <param name="id">Identified of Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.Add(DeMasterProCloud.DataModel.Company.CompanyModel)">
            <summary>
            Add a company
            </summary>
            <param name="model">JSON model for Company</param>
            <returns></returns>
            <response code="201">Success: Create new a company</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.AssignDoor(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Assign device(s) to a Company
            </summary>
            <param name="deviceIds">selected device(s) Id(s)</param>
            <param name="id">companyId</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.AssignUnregisteredDevice(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Assign unregistered ids to company
            </summary>
            <param name="unregisteredIds"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.Edit(System.Int32,DeMasterProCloud.DataModel.Company.CompanyModel)">
            <summary>
            Edit company information
            </summary>
            <param name="id">Identified of Company</param>
            <param name="model">JSON model for Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="422">Validation Failed: Data in Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.Delete(System.Int32)">
            <summary>
            Delete a company
            </summary>
            <param name="id">Identified of Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multiple companies
            </summary>
            <param name="ids">List of company ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Company Ids does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.RegenerateAesKey">
            <summary>
            Reset key companies
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.RegenerateAesKeyCompany(System.Int32)">
            <summary>
            Reset key company
            </summary>
            <param name="id">Company Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Company Id does not exist in DB</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetPluginByCompany(System.Int32)">
            <summary>
            Get plug-ins with company by id
            </summary>
            <param name="id">Company Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.UpdatePluginByCompany(System.Int32,DeMasterProCloud.DataModel.PlugIn.PlugIns)">
            <summary>
            Update plug-ins to company by id
            </summary>
            <param name="id">Company Id</param>
            <param name="model">JSON model for Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetVisibleFieldSettingVisit(System.Int32)">
            <summary>
            Get fields visible of visit setting
            </summary>
            <param name="companyId">Company Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.UpdateVisibleFieldSettingVisit(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Update fields visible of visit setting
            </summary>
            <param name="companyId">Company Id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetCompanyDetailById(System.Int32)">
            <summary>
            Get detail of company by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetEncryptSetting(System.Int32)">
            <summary>
            Get company setting about DB encryption.
            </summary>
            <param name="id">Identified of Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="422">Validation Failed: Data in Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.EditEncryptSetting(System.Int32,DeMasterProCloud.DataModel.Company.EncryptSettingModel)">
            <summary>
            Update company setting about DB encryption.
            </summary>
            <param name="id">Identified of Company</param>
            <param name="model">JSON model for Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="422">Validation Failed: Data in Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.GetExpiredPWSetting(System.Int32)">
            <summary>
            Get company setting about DB encryption.
            </summary>
            <param name="id">Identified of Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="422">Validation Failed: Data in Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.EditExpiredPWSetting(System.Int32,DeMasterProCloud.DataModel.Company.ExpiredPWSettingModel)">
            <summary>
            Update company setting about DB encryption.
            </summary>
            <param name="id">Identified of Company</param>
            <param name="model">JSON model for Company</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Company Id does not exist in DB</response>
            <response code="422">Validation Failed: Data in Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.TEST_ENC(System.String)">
            <summary>
            TEST for encryption.
            </summary>
            <param name="plainData"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.TEST_DEC(System.String)">
            <summary>
            TEST for decryption.
            </summary>
            <param name="encData"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.CompanyController.ResetAllowIpSetting(System.Int32)">
            <summary>
            
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.DashboardController">
            <summary>
            Dashboard controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.#ctor(DeMasterProCloud.Service.IDeviceService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IRoleService,DeMasterProCloud.Service.INotificationService,DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IAccountService,DeMasterProCloud.Service.IEventLogService,DeMasterProCloud.Service.IAttendanceService,DeMasterProCloud.Service.IPluginService,DeMasterProCloud.Service.IVisitService,DeMasterProCloud.Service.IVehicleService)">
            <summary>
            Device controller
            </summary>
            <param name="deviceService"></param>
            <param name="httpContextAccessor"></param>
            <param name="userService"></param>
            <param name="roleService"></param>
            <param name="notificationService"></param>
            <param name="companyService"></param>
            <param name="accountService"></param>
            <param name="eventLogService"></param>
            <param name="attendanceService"></param>
            <param name="pluginService"></param>
            <param name="visitService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.AdminDashboard">
            <summary>
            Return total number for admin dashboards
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.AccessDashboard(System.String,System.Int32)">
            <summary>
            Return number for company dashboard
            </summary>
            <param name="accessDate"></param>
            <param name="type">0 - both, 1 - only info number</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.AttendanceDashboard(System.String)">
            <summary>
            Return number for company dashboard
            </summary>
            <param name="attendanceDate">String for DateTime of Attendance</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Condition of Plugin Service null</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.VisitDashboard(System.String)">
            <summary>
            Return number for company dashboard
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.RecentlyDisconnectedDevices(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Return list of disconnected devices in the last 24 hours
            </summary>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.NoticeDashboard">
            <summary>
            get visit application request, access application request and 5 notices
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DashboardController.VehicleDashBoard(System.String)">
            <summary>
            get dash board of vehicle
            </summary>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.DepartmentController">
            <summary>
            Department controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.#ctor(DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.IUserService,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Ctor of department
            </summary>
            <param name="departmentService"></param>
            <param name="userService"></param>
            <param name="httpContextAccessor"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get (a) department(s) by search filter
            </summary>
            <param name="search">Query string that filter Department by Name, Department Number or Name of Parent.</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.GetDepartmentHierarchy(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get department as hierarchy form.
            </summary>
            <param name="search">Query string that filter Department by Name, Department Number or Name of Parent.</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.Get(System.Int32)">
            <summary>
            get a department by Id
            </summary>
            <param name="id">Department Id</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Department does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.Add(DeMasterProCloud.DataModel.Department.DepartmentModel)">
            <summary>
            add a department
            </summary>
            <param name="model">JSON model for Department</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Company account does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.Edit(System.Int32,DeMasterProCloud.DataModel.Department.DepartmentModel)">
            <summary>
            edit a department
            </summary>
            <param name="id">Department Id</param>
            <param name="model">JSON model for Department</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Account Company or department not found</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.Delete(System.Int32)">
            <summary>
            delete a department by id
            </summary>
            <param name="id">Department Id</param>
            <response code="400">Bad Request: Length of List company with department empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Department does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.GetUserUnAssign(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            </summary>
            <param name="id">Department Id</param>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <response code="400">Bad Request: Length of List company with department empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Department does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.AssignUsers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            </summary>
            <param name="id">Department Id</param>
            <param name="userIds">List user Id</param>
            <response code="400">Bad Request: Length of List company with department empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Department does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.UnAssignUsers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            </summary>
            <param name="id">Department Id</param>
            <param name="userIds">List user Id</param>
            <response code="400">Bad Request: Length of List company with department empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Department does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete departments by id list
            </summary>
            <param name="ids">list to ids on the device to delete</param>
            <response code="400">Bad Request: Length of List company with department empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Departments does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.GetListDepartment">
            <summary>
            Get list of all departments as hierarchy
            </summary>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.GetListParentDepartment">
            <summary>
            Get list parent department
            </summary>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.ImportDepartment(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Import departments data
            </summary>
            <param name="file">file stored list of departments to create</param>
            <param name="type">type file import (excel, csv)</param>
            <returns></returns>
            <response code="400">Bad Request: File extension not valid or data in file wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: File not found</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.ExportDepartment(System.String,System.String,System.String,System.String)">
            <summary>
            Export departments data
            </summary>
            <param name="type"> file type </param>
            <param name="filter">Query string that filter Department by Name, Department Number or Name of Parent.</param>
            <param name="sortColumn">Sort Column by index of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.DepartmentDeviceAssigned(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list device assigned in department
            </summary>
            <param name="departmentId"></param>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.DepartmentDeviceUnAssigned(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list device unAssigned in department
            </summary>
            <param name="departmentId"></param>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.DepartmentAssignDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Assign door to department
            </summary>
            <param name="id"></param>
            <param name="doorIds"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.DepartmentUnAssignDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Unassign door of department
            </summary>
            <param name="id"></param>
            <param name="doorIds"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DepartmentController.CreateTestData(System.Int32)">
            <summary>
            Generate test data
            </summary>
            <param name="numberOfDept">Number of departments to be created</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.DeviceController">
            <summary>
            Device controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.#ctor(DeMasterProCloud.Service.IDeviceService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IVisitService,DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IBuildingService,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper)">
            <summary>
            Device controller
            </summary>
            <param name="deviceService"> Service of device </param>
            <param name="httpContextAccessor"></param>
            <param name="visitService"> Service of visit </param>
            <param name="departmentService"></param>
            <param name="companyService"></param>
            <param name="userService"></param>
            <param name="buildingService"></param>
            <param name="configuration"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetDeviceInit">
            <summary>
            init device page
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Return Json object for all device list
            </summary>
            <param name="search">Query string that filter Devices by Name, Device Address or Name of Building</param>
            <param name="deviceType">Device type</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <param name="operationType">operation type (restaurant - 1, entrance - 0)</param>
            <param name="companyId">Company Id</param>
            <param name="connectionStatus">status connection</param>
            <param name="status">list of status device</param>
            <param name="pageName"></param>
            <param name="buildingIds">list of Building Ids</param>
            <param name="mealServiceTimeIds">list of meal service time ids</param>
            <param name="isAllBuildingParent">Option get all list building parent</param>
            <param name="ignoreIds"></param>
            <param name="checkCount"> a flag to distinguish calculating registered user count </param>
            <example> 
            0: Do not calculate registered user count 
            1: Calculate registered user count in background (Thread)
            2: Calculate registered user count in API process (same as original)
            </example>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetValidDevice(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Return Json object for all device list
            </summary>
            <param name="search">Query string that filter Devices by Name or Device Address</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: 'desc' for descending , 'asc' for ascending </param>
            <param name="companyId">Company Id</param>
            <param name="connectionStatus">status connection</param>
            <param name="deviceType">Device type</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.FilterCompanyAndDeviceType">
            <summary>
            Get devices filtered by company and deviceType
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetInit">
            <summary>
            Get init
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.Get(System.Int32)">
            <summary>
            Get device information by id
            </summary>
            <param name="id">device id to get</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.Add(DeMasterProCloud.DataModel.Device.DeviceModel)">
            <summary>
            Add device to system
            </summary>
            <param name="model">This model has information about the device to be added.</param>
            <returns></returns>
            <response code="201">Create new a device</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.Edit(System.Int32,DeMasterProCloud.DataModel.Device.DeviceModel)">
            <summary>
            Update device information
            </summary>
            <param name="id">device id to edit</param>
            <param name="model">This model has modified information about the device.</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.Delete(System.Int32)">
            <summary>
            Delete device by id ( only 1 device )
            </summary>
            <param name="id">device id to delete</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete devices by multi id ( 1~multi device(s) )
            </summary>
            <param name="ids">list of devices to delete</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Device Ids does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.ToggleStatus(System.Int32,DeMasterProCloud.DataModel.Device.DeviceStatus)">
            <summary>
            Change device status to Valid or Invalid
            </summary>
            <param name="id">Device ID to change status</param>
            <param name="model">This model has information about device status.</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetDeviceInfoResponse(System.Int32)">
            <summary>
            get device infomation in response. ( ex. Send current time )
            </summary>
            <param name="id">device id to get information about</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.SendDeviceInstruction(DeMasterProCloud.DataModel.Device.DeviceInstruction)">
            <summary>
            send device instruction command.
            </summary>
            <param name="model">This model has information about instruction.</param>
            <returns></returns>
            <response code="400">Bad Request: command in Model JSON not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.SendDeviceInstructionRID(DeMasterProCloud.DataModel.Device.DeviceInstructionRID)">
            <summary>
            send device instruction command by using RID
            </summary>
            <param name="model">This model has information about instruction.</param>
            <returns></returns>
            <response code="400">Bad Request: command in Model JSON not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.ReinstallDevices(System.Collections.Generic.List{DeMasterProCloud.DataModel.Device.ReinstallDeviceDetail})">
            <summary>
            Reinstall the devices
            </summary>
            <param name="deviceDetails">List of ReinstallDeviceDetail class.
                                        This class includes DeviceId and ProcessId.
                                        DeviceId is device id to reinstall.
                                        ProcessId is process id made by web app to show percentage through progress bar.</param>
            <returns></returns>
            <response code="400">Bad Request: address of Device Offline not null or list of device online empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id in List of Model Service does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.CopyDevices(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Copy device
            </summary>
            <param name="id">Device Id template</param>
            <param name="ids">JSON model for list of Device Ids to copy</param>
            <returns></returns>
            <response code="400">Bad Request: address of Device Offline not null or list of device online empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetListDeviceTypes(System.Collections.Generic.List{System.Int32})">
            <summary>
            Get device type list
            </summary>
            <param name="ids">List of Device Ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id in List of Model Service does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.UploadFileProgress(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            file upload to update device
            </summary>
            <param name="models">file upload include list of device to update</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: File not found</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetTransmitInfo">
            <summary>
            get Transmit information
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.StopProcess(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String})">
            <summary>
            Stop update firmware for list of device
            </summary>
            <param name="ids">list device ids</param>
            <param name="processIds">list of process ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id in List of Model Service does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.TransmitData(DeMasterProCloud.DataModel.Device.TransmitDataModel)">
             <summary>
             transmit data to device(s).
             </summary>
            
             <remarks>   Edward, 2020-02-03. </remarks>
            
             <param name="model">    This model has information about the device to receive data.  </param>
            
             <returns>   An IActionResult. </returns>
             <response code="400">Bad Request: address of Device Offline not null or list of device online empty</response>
             <response code="401">Unauthorized: Lack of String Token Bearer</response>
             <response code="403">Forbidden: Login with other account with role higher</response>
             <response code="404">Not Found: Device Id does not exist in DB</response>
             <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetUserInfo(System.Int32,System.String)">
            <summary>
            Get information user of Device
            </summary>
            <param name="id">Device Id</param>
            <param name="cardId">Card Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetUserInfoByCardId(System.Int32,System.String)">
            <summary>
            Get user infomation by user's card ID
            </summary>
            <param name="id">device ID</param>
            <param name="cardId">Card ID</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetUserInfoByCardIdwithRid(System.String,System.String)">
            <summary>
            Get user infomation by user's card ID
            Search device by deviceAddress
            </summary>
            <param name="address">device address number</param>
            <param name="cardId">Card ID</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetList">
            <summary>
            get initialize data of device
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.BackupRequest">
            <summary>
            Backup Request
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.SetMaxIcuSendUserCount(System.Int32,System.Int32)">
            <summary>
            Set Max Icu Send User Count(default : 5) If input is 0, set default value.
            Set Delay between sending user protocol (unit : ms)
            </summary>
            <param name="count">Max Icu Send User</param>
            <param name="delay">Delay between sending user protocol</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetDeviceHistory(System.Int32,System.Int32,System.Int32)">
             <summary>
                         gets device history.
             </summary>
            
             <remarks>   Edward, 2020-03-06. </remarks>
            
             <param name="id">           device id to get. </param>
             <param name="pageNumber">   (Optional) current page number. </param>
             <param name="pageSize">     (Optional) Number of items to show on a page. </param>
            
             <returns>   The device history. </returns>
             <response code="401">Unauthorized: Lack of String Token Bearer</response>
             <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.ReUpdateUpTimeOnlineDevice">
            <summary>
            Re-update uptime for all of list devices
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List  of Device in DB empty</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.ReUpdateUpTimeOnlineDeviceById(System.Int32)">
            <summary>
            Re-update uptime by id
            </summary>
            <param name="id">Device Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List  of Device in DB empty</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.ConfigLocalMqtt(DeMasterProCloud.DataModel.Setting.ConfigLocalMqttModel)">
            <summary>
            Config local mqtt for device
            </summary>
            <param name="model"></param>
            <returns></returns>
            <response code="400">Bad Request: command in Model JSON is null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.TurnOnOrOffAlarm(DeMasterProCloud.DataModel.Device.DeviceConfigAlarmModel)">
            <summary>
            Turn on/off alarm (ICU 2nd relay)
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.CheckRIDExist(DeMasterProCloud.DataModel.Device.DeviceRidModel)">
            <summary>
            Check the RID is existing in server.
            </summary>
            <param name="model"> This model has the address of device. </param>
            <returns></returns>
            <response code="400">Bad Request: command in Model JSON not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Device Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetSubDeviceInfo(System.String)">
            <summary>
            Get sub-display device info (last of event-log) by token device
            </summary>
            <param name="token">token device</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.AssignUsersToDevice(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Assign users to device.
            </summary>
            <param name="id">       Device identifier. </param>
            <param name="userIds">  List of identifiers for the users. </param>
            <returns>   An IActionResult. </returns>
            <response code="400">Bad Request: Access group Id does not exist, list of User Ids empty or user assigned for access group</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.UnassignUsersFromDevice(System.Int32,System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Un-assign users to device.
            </summary>
            <param name="id">       Device identifier. </param>
            <param name="userIds">  List of identifiers for the users. </param>
            <param name="ok">       boolean value that means "ok" or "no" in dialog. </param>
            <returns>   An IActionResult. </returns>
            <response code="400">Bad Request: Access group Id does not exist, list of User Ids empty or user assigned for access group</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.UploadLogDevice(System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Device will use this api to upload file logs
            </summary>
            <param name="rid">device address</param>
            <param name="msgId">message id of mqtt</param>
            <param name="hash">hash md5 (msgId + rid + companyCode)</param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetAllLogsOfDevice(System.Int32)">
            <summary>
            Get all file logs of device by deviceId
            </summary>
            <param name="deviceId">identity of device</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.DownloadFileLogOfDevice(System.Int32,System.String)">
            <summary>
            Download file log of device
            </summary>
            <param name="id">device id</param>
            <param name="fileName">if fileName is empty, the server will send to all logs (zip file)</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.RequestLogFile(System.Int32)">
            <summary>
            Request file log of device
            </summary>
            <param name="id">device id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceController.GetRegisteredCardsByType(System.Int32)">
            <summary>
            Get registered cards 
            </summary>
            <param name="id"> identifier of device </param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.DeviceReaderController">
            <summary>
            DeviceReader controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IDeviceReaderService,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            DeviceReader controller
            </summary>
            <param name="configuration"></param>
            <param name="deviceReaderService"></param>
            <param name="httpContextAccessor"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            GET /deviceReaders : return all existing deviceReaders with paging and sorting
            <summary>
            Return Json object for all deviceReader list
            </summary>
            <param name="search">Query string that filter DeviceReader by Name or Type</param>
            <param name="buildingIds">List of building ids</param>
            <param name="deviceTypeIds">List of device type ids</param>
            <param name="deviceIds">List device ids</param>
            <param name="statusIds">List of status ids</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Get(System.Int32)">
            GET /deviceReaders/{ID} : Get details of one deviceReader
            <summary>
            Get deviceReader detail information by id
            </summary>
            <param name="id">DeviceReader Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: DeviceReader Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Add(DeMasterProCloud.DataModel.DeviceReader.DeviceReaderModel)">
            POST /deviceReaders : Create new deviceReader
            <summary>
            Add new a deviceReader
            </summary>
            <param name="model">JSON model for DeviceReader</param>
            <returns></returns>
            <response code="201">Create new a deviceReader</response>
            <response code="400">Bad Request: count of deviceReaders must littler than max of deviceReaders</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="422">Unprocessable Entity: Data of Model JSON not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Edit(System.Int32,DeMasterProCloud.DataModel.DeviceReader.DeviceReaderModel)">
            PUT /deviceReaders/{ID} : Update a deviceReader
            <summary>
            Update deviceReader
            </summary>
            <param name="id">DeviceReader Id</param>
            <param name="model">JSON model for deviceReader</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: DeviceReader Id not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            DELETE /deviceReaders : Delete multiple deviceReaders by list of ids
            <summary>
            Delete deviceReaders by multi id
            </summary>
            <param name="ids">List of deviceReader ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: List of DeviceReader Ids not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Delete(System.Int32)">
            DELETE /deviceReaders/{ID} : Delete 1 deviceReader by ID
            <summary>
            Delete deviceReader by Id
            </summary>
            <param name="id">DeviceReader Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: DeviceReader Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.DeviceReaderController.Export">
            <summary>
            Export to file excel
            </summary>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.EventLogController">
            <summary>
            EventLog controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.#ctor(DeMasterProCloud.Service.IEventLogService,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IAccountService,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,DinkToPdf.Contracts.IConverter,DeMasterProCloud.Service.IDeviceService,DeMasterProCloud.Service.IVehicleService,DeMasterProCloud.Service.ICompanyService,AutoMapper.IMapper)">
            <summary>
            Report controller
            </summary>
            <param name="eventLogService"></param>
            <param name="userService"></param>
            <param name="accountService"></param>
            <param name="configuration"></param>
            <param name="httpContextAccessor"></param>
            <param name="converter"></param>
            <param name="deviceService"> service of device </param>
            <param name="vehicleService"> service of vehicle </param>
            <param name="companyService"> service of company </param>
            <param name="mapper"> service of vehicle </param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventLogInit">
            <summary>
            Init data for function event log
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventLogReportInit">
            <summary>
            Init data for function event log report
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventLogs(System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.String},System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This is an API that can inquire access events.
            Data is output in order of progress number, access time, name, date of birth, user code, department, card number, RID, door name, place (building name), entry/exit, and event type.
            This function is used in Monitoring page.
            Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="from">This parameter set string of access date time start</param>
            <param name="to">This parameter set string of access date time end</param>
            <param name="personType">Person type</param>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="userName">[String]This parameter allows you to filter the username.</param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="cardId">[String]This parameter allows you to filter the card ID.</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="buildingIds">[String]This parameter allows you to filter the building ids.</param>
            <param name="departmentIds">[String]This parameter can filter the department ids.</param>
            <param name="verifyModeIds">[Integer (0~3)]This parameter allows you to filter the authentication mode.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="company">Company Id</param>
            <param name="isValid"> Only valid user of only invalid user of all user </param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.WritePerformanceCsvData(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Write performance csv data
            </summary>
            <param name="numberOfEvent"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.Export(System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.String)">
            <summary>
            Export event log to file. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="from">This parameter set string of access date start</param>
            <param name="to">This parameter set string of access date end</param>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="userName">[String]This parameter allows you to filter the username.</param>
            <param name="workType"></param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="cardId">[String]This parameter allows you to filter the card ID.</param>
            <param name="search">[String]This parameter allows you to filter search all.</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="buildingIds">[String]This parameter allows you to filter the building ids.</param>
            <param name="departmentIds">[String]This parameter can filter the department ids.</param>
            <param name="cardType">List of card types</param>
            <param name="verifyModeIds">[Integer (0~3)]This parameter allows you to filter the authentication mode.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="company">Company Id</param>
            <param name="isValid"> only valid user or only invalid user or all user </param>
            <param name="type">Type of file to export</param>
            <param name="sortColumn">Sort Column by string of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.ExportReport(System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String)">
            <summary>
            Export 2 - Export file report event log. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="userName">[String]This parameter allows you to filter the username.</param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="cardId">[String]This parameter allows you to filter the card ID.</param>
            <param name="search">[String]This parameter allows you to filter the search all</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="buildingList">[String]This parameter allows you to filter the building name.</param>
            <param name="departmentIds">This parameter can filter the department ids.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="workType"></param>
            <param name="cardType">Type of card</param>
            <param name="company">Company Id</param>
            <param name="culture"> localization code </param>
            <param name="type">Type of file to export</param>
            <param name="isValid"> Only valid user or only invalid user or all user </param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventLogPdfView(System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String)">
            <summary>
            View the event log data through pdf file. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="model.AccessDateFrom.AccessDateFrom">This parameter set string of access date start</param>
            <param name="model.AccessDateTo.AccessDateTo">This parameter set string of access date end</param>
            <param name="model.AccessTimeFrom.AccessTimeFrom">This parameter set string of access time start</param>
            <param name="model.AccessTimeTo.AccessTimeTo">This parameter set string of access time end</param>
            <param name="model">This parameter sets the time range when searching events.</param>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="userName">[String]This parameter allows you to filter the username.</param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="cardId">[String]This parameter allows you to filter the card ID.</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="buildingIds">[String]This parameter allows you to filter the building ids.</param>
            <param name="departmentIds">[String]This parameter can filter the department ids.</param>
            <param name="verifyModeIds">[Integer (0~3)]This parameter allows you to filter the authentication mode.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="company">Company Id</param>
            <param name="search">search all</param>
            <param name="isValid"> Only valid user or only invalid user or all user </param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetDeviceList(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get Device List for Event Recovery. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="search">Query string that filter Device by Name, Device Address or Building Name</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UpdateBodyTemperature(System.Int32,DeMasterProCloud.DataModel.EventLog.BodyTemperatureModel)">
            <summary>
            Update Body-Temperature
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventCountInquiry(System.Collections.Generic.List{System.Int32},DeMasterProCloud.DataModel.EventLog.EventLogAccessTimeModel,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get Device List for Event Recovery
            </summary>
            <param name="deviceIds">List of device ids</param>
            <param name="model.AccessDateFrom.AccessDateFrom">This parameter set string of access date start</param>
            <param name="model.AccessDateTo.AccessDateTo">This parameter set string of access date end</param>
            <param name="model.AccessTimeFrom.AccessTimeFrom">This parameter set string of access time start</param>
            <param name="model.AccessTimeTo.AccessTimeTo">This parameter set string of access time end</param>
            <param name="model">This parameter sets the time range when searching events.</param>
            <param name="search">Query string that filter Device by Name, Device Address or Building Name</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventRecovery(System.Collections.Generic.List{DeMasterProCloud.DataModel.EventLog.EventRecoveryProgressModel},DeMasterProCloud.DataModel.EventLog.EventLogAccessTimeModel)">
            <summary>
            Event Recovery. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="eventRecoveryProgressModels">JSON model for array object(device id and process id)</param>
            <param name="model.AccessDateFrom.AccessDateFrom">This parameter set string of access date start</param>
            <param name="model.AccessDateTo.AccessDateTo">This parameter set string of access date end</param>
            <param name="model.AccessTimeFrom.AccessTimeFrom">This parameter set string of access time start</param>
            <param name="model.AccessTimeTo.AccessTimeTo">This parameter set string of access time end</param>
            <param name="model">This parameter sets the time range when searching events.</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Event recovery model not null</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EventReport(System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This function is used in Report page. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)    
            </summary>
            <param name="from">This parameter set string of access date time start</param>
            <param name="to">This parameter set string of access date time end</param>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="search">[String]This parameter allows you to filter the username.</param>
            <param name="departmentIds">This parameter can filter the department ids</param>
            <param name="workType"></param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="cardId">[String]This parameter allows you to filter the card ID.</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="buildingList">[String]This parameter allows you to filter the building name.</param>
            <param name="cardType">Type of Card</param>
            <param name="isValid"> Only valid user of only invalid user or all user </param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="culture">This parameter set culture</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetAllFileBackup(System.Boolean)">
            <summary>
            Get all files backup with company
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UploadImagePlateNumber(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload image plate number
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UploadVideoPlateNumber(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload video plate number
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UploadVideoEventLog(System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload record video
            </summary>
            <param name="rid"></param>
            <param name="startTime"></param>
            <param name="hash"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetAccessStatistics(System.DateTime,System.DateTime,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Get access statistics
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="inOutType"></param>
            <param name="buildingIds"></param>
            <param name="type">"person" or "vehicle"</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.OpenAPIEventReport(System.Int32)">
            <summary>
            Open API-User event inquiry
            </summary>
            <param name="id">User ID</param>
            <returns>return Event log for 1 user</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.CreateTestData(System.Int32)">
            <summary>
            Generate test data
            </summary>
            <param name="numberOfevent"> number of events</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventLogForAttendance(System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Get event log for attendence
            </summary>
            <param name="AccessDateFrom"> start date </param>
            <param name="AccessDateTo"> end date </param>
            <param name="userIds"> list of identifier of user </param>
            <param name="departmentIds"> list of identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventLogNotUploaded(System.Int32)">
            <summary>
            Get event log for ADD data sync
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.EditEventLogNotUploaded(System.Collections.Generic.List{System.Int32})">
            <summary>
            Edit event log for ADD data sync (index : 0 to 1)
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.InitVehicleEventLogReportFilter">
            <summary>
            Get initial data about vehicle report data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.ExportVehicleReport(System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String)">
            <summary>
            Export - Export file report vehicle event log. Filter by time model(AccessDateFrom - AccessDateTo, AccessTimeFrom - AccessTimeTo)
            </summary>
            <param name="from">This parameter set string of access date start</param>
            <param name="to">This parameter set string of access date end</param>
            <param name="eventType">[Integer (1~44)]This parameter can be filtered when searching for specific events. ex) General access: 1 (Refer to the manual for event type definition.)</param>
            <param name="userName">[String]This parameter allows you to filter the username.</param>
            <param name="plateNumber"></param>
            <param name="search"></param>
            <param name="inOutType">[Integer (1, 2)This parameter can filter the In/Out type of the door. ex) In : 1, Out : 2</param>
            <param name="doorIds">[Integer]This parameter can filter the ID of the door.</param>
            <param name="objectType">[Integer (0~2)]This parameter allows you to filter the object type of event.</param>
            <param name="buildingIds">[String]This parameter allows you to filter the building ids.</param>
            <param name="departmentIds">[String]This parameter can filter the department ids.</param>
            <param name="vehicleClassificationIds"></param>
            <param name="cardType">Type of card</param>
            <param name="company">Company Id</param>
            <param name="culture"> localization code </param>
            <param name="type">Type of file to export</param>
            <param name="isValid"> Only valid user or only invalid user or all user </param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Time model filter wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventByTokenScreenMonitoring(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get event log and init page monitoring by token
            </summary>
            <param name="token"></param>
            <param name="eventType"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventByTokenScreenMonitoringToSchool(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get event log and init page monitoring by token
            </summary>
            <param name="token"></param>
            <param name="eventType"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventLogDetailById(System.Int32)">
            <summary>
            Get detail event-logs by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventLogRelated(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list event-logs related
            </summary>
            <param name="eventLogId"></param>
            <param name="userId"></param>
            <param name="visitId"></param>
            <param name="eventTypes"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetCountByWorkType">
            <summary>
            Get the latest event-logs and figure out the count by workType
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetCountByVisitType">
            <summary>
            Get the latest event-logs and figure out the count by visitor Type
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetEventLogByWorkType(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Get the latest event-logs and figure out the count by workType
            </summary>
            <param name="deviceIds"> list of device identifier (DB index)  </param>
            <param name="eventTypes"> list of eventType </param>
            <param name="workTypes"> List of workType to get EventLog </param>
            <param name="inOut"> List of in/Out type </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetUserInOutStatus(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.DateTime,System.String,System.String,System.String)">
            <summary>
            Get in-out status of users by using eventLogs
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <param name="deviceIds"></param>
            <param name="workTypes"></param>
            <param name="inOut"></param>
            <param name="departmentIds"></param>
            <param name="lastEventTime"></param>
            <param name="userName"></param>
            <param name="cardId"></param>
            <param name="militaryNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.GetVehicleInOutStatus(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>
            Get in-out status of vehicle by using eventLogs
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <param name="deviceIds"></param>
            <param name="workTypes"></param>
            <param name="inOut"></param>
            <param name="departmentIds"></param>
            <param name="lastEventTIme"></param>
            <param name="userName"></param>
            <param name="model"></param>
            <param name="color"></param>
            <param name="plateNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UploadImageToEventLog(System.String,DeMasterProCloud.DataModel.EventLog.UploadImageEventModel)">
            <summary>
            Upload image to update image of event-log
            </summary>
            <param name="rid"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.EventLogController.UploadImageCheckinVisitToEventLog(System.String,DeMasterProCloud.DataModel.EventLog.UploadImageVisitCheckinModel)">
            <summary>
            When register visit by Android Terminal Device, that device will upload file checkin
            </summary>
            <param name="rid"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list firmware version
            </summary>
            <param name="version"></param>
            <param name="deviceTypes"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.Add(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String,System.Int16)">
            <summary>
            Add new firmware version
            </summary>
            <param name="file"></param>
            <param name="version"></param>
            <param name="note"></param>
            <param name="deviceType"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.Delete(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multi firmware version
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.DownloadFirmwareVersion(System.String)">
            <summary>
            Download firmware version
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.UpdateFirmwareToDevices(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Update firmware 
            </summary>
            <param name="id"></param>
            <param name="processIds"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.FirmwareVersionController.DeviceDownloadFirmware(System.String,System.String)">
            <summary>
            Device will using this to download file firmware
            </summary>
            <param name="fileName"></param>
            <param name="hash">MD5(fileName + companyCode + ddMMyyyyHH (UTC time))</param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.HolidayController">
            <summary>
            Holiday controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IHolidayService,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Holiday controller
            </summary>
            <param name="configuration"></param>
            <param name="holidayService"></param>
            <param name="httpContextAccessor"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            GET /holidays : return all existing holidays with paging and sorting
            <summary>
            Return Json object for all holiday list
            </summary>
            <param name="search">Query string that filter Holiday by Name or Type</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.Add(System.Collections.Generic.List{DeMasterProCloud.DataModel.Holiday.HolidayModel})">
            POST /holidays : Create new holiday
            <summary>
            Add new a holiday
            </summary>
            <param name="models">JSON model for Holiday</param>
            <returns></returns>
            <response code="201">Create new a holiday</response>
            <response code="400">Bad Request: count of holidays must littler than max of holidays</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="422">Unprocessable Entity: Data of Model JSON not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.Get(System.Int32)">
            GET /holidays/{ID} : Get details of one holiday
            <summary>
            Get holiday detail information by id
            </summary>
            <param name="id">Holiday Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Holiday Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.Edit(System.Int32,DeMasterProCloud.DataModel.Holiday.HolidayModel)">
            PUT /holidays/{ID} : Update a holiday
            <summary>
            Update holiday
            </summary>
            <param name="id">Holiday Id</param>
            <param name="model">JSON model for holiday</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Holiday Id not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON not valid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            DELETE /holidays : Delete multiple holidays by list of ids
            <summary>
            Delete holidays by multi id
            </summary>
            <param name="ids">List of holiday ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: List of Holiday Ids not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HolidayController.Delete(System.Int32)">
            DELETE /holidays/{ID} : Delete 1 holiday by ID
            <summary>
            Delete holiday by Id
            </summary>
            <param name="id">Holiday Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Holiday Id not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.HomeController">
            <summary>
            Home controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.HomeController.Index">
            <summary>
            Display data for dashboash
            </summary>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.MonitoringController">
            <summary>
            Monitoring controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.MonitoringController.#ctor(DeMasterProCloud.Service.IDeviceService,AutoMapper.IMapper)">
            <summary>
            Report controller
            </summary>
            <param name="deviceService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.MonitoringController.GetDoorList">
            <summary>
            Initial door list. 
            If the number of device is more than 5, return null.
            If the number of device is less than 5, return devices information.
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.NotificationController">
            <summary>
            Contorller of Notification
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.#ctor(DeMasterProCloud.Service.INotificationService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            controller of notification
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.GetListNotification(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of notification by user (include companyId and userId)
            </summary>
            <param name="search">Query string that filter notifications by content</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="firstAccessTime">String of first access time</param>
            <param name="lastAccessTime">String of last access time</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.GetCompanyNotices(System.String,System.Int32,System.Int32)">
            <summary>
            Get company notices
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.AddDashboardNotice(System.String)">
            <summary>
            Add company notice
            </summary>
            <param name="notice"> notice contents </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.UpdateDashboardNotice(System.Int32,System.String)">
            <summary>
            Update company notice
            </summary>
            <param name="id"> notice identifier </param>
            <param name="notice"> new notice contents </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.DeleteDashboardNotice(System.Int32)">
            <summary>
            Delete company notice
            </summary>
            <param name="id"> notice identifier </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.GetNotificationById(System.Int32)">
            <summary>
            Get notification by id value
            </summary>
            <param name="id">Notification id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.UpdateStatus(System.Int32,DeMasterProCloud.DataModel.Notification.NotificationUpdate)">
            <summary>
            Update status
            </summary>
            <param name="id">Notification id</param>
            <param name="model">JSON model include status boolean read or unread</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.DeleteNotification(System.Int32)">
            <summary>
            Delete notification by id
            </summary>
            <param name="id">notification id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.UpdateMultipleStatus(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Update multiple status
            </summary>
            <param name="lstStatus">list of notification ids to update status</param>
            <param name="Status">boolean status read or unread</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.DeleteMultipleStatus(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete Multiple status
            </summary>
            <param name="lstStatus">list of notification ids</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.DeleteAllStatus">
            <summary>
            Delete All status
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.UnReadAll">
            <summary>
            Mark all notifications as "UnRead"
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.NotificationController.CreateNotice(DeMasterProCloud.DataModel.Notification.NotificationNoticeModel)">
            <summary>
            Manager user create notification send to users
            </summary>
            <param name="model">
            If count of list UserIds = 0, send default to all users of company
            </param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.PluginController">
            <summary>
            Controller of plugin function
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.PluginController.#ctor(DeMasterProCloud.Service.IPluginService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            plug-in controller
            </summary>
            <param name="pluginService"></param>
            <param name="httpContextAccessor"></param>
            <param name="configuration"></param>
            <param name="companyService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.PluginController.Get(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get Solution(s)
            </summary>
            <param name="search">Query string that filter plugin</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.PluginController.Update(System.Int32,DeMasterProCloud.DataModel.PlugIn.PlugIns)">
            <summary>
            Update Plugin
            </summary>
            <param name="id">Plugin id</param>
            <param name="model">JSON model for Plugin</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Plugin Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.RoleController">
            <summary>
            Controller of Role setting
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.#ctor(DeMasterProCloud.Service.IRoleService,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IAccountService)">
            <summary>
            Role controller
            </summary>
            <param name="roleService"> Service of Dynamic role </param>
            <param name="httpContextAccessor"></param>
            <param name="configuration"> configuration </param>
            <param name="companyService"> service of company </param>
            <param name="accountService"> service of account </param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.Gets(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of Role from DB
            </summary>
            <param name="search">Query string that filter by name</param>
            <param name="pageNumber">Page number start from 1</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.Get(System.Int32)">
            <summary>
            Get role information by id
            </summary>
            <param name="id"> identifier of role </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Role does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.Add(DeMasterProCloud.DataModel.Role.RoleModel,System.Int32)">
            <summary>
            Add a new role to system
            </summary>
            <param name="model"> This model has information about the device to be added. </param>
            <param name="similarId"> identifier of role that is similar-made </param>
            <returns></returns>
            <response code="201">Create new a role</response>
            <response code="400">Bad Request: similar role not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.Edit(System.Int32,DeMasterProCloud.DataModel.Role.RoleModel,System.Int32)">
            <summary>
            Update permission list of spectific role
            </summary>
            <param name="id"> identifier of this role </param>
            <param name="model"> data model that include information </param>
            <param name="similarId"> identifier of role that is similar-made </param>
            <returns></returns>
            <response code="400">Bad Request: similar role not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.Delete(System.Int32)">
            <summary>
            Delete a role
            </summary>
            <param name="id"> identifier of dynamic role </param>
            <returns></returns>
            <response code="400">Bad Request: type role in role not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Role does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multiple roles
            </summary>
            <param name="ids"> list of identifier of dynamic role </param>
            <returns></returns>
            <response code="400">Bad Request: type role in role not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Roles does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.AddDefault">
            <summary>
            Add a default role to existing companies.
            </summary>
            <returns></returns>
            <response code="201">Create new role default</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.UpdateDefaultPermission">
            <summary>
            Update default permissions.
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.RoleController.ChangeDefaultRoleSettingForUser(System.Int32)">
            <summary>
            Update role setting default
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.SettingController">
            <summary>
            Setting controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.#ctor(DeMasterProCloud.Service.ISettingService,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Ctor of setting
            </summary>
            <param name="settingService"></param>
            <param name="configuration"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.Get">
            <summary>
            Get the setting
            </summary>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.Get(System.Int32)">
            <summary>   Get the setting. </summary>
            <remarks>   Edward, 2020-01-29. </remarks>
            <param name="id">   The identifier. </param>
            <returns>   An IActionResult. </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Setting service does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.Edit(System.Int32,DeMasterProCloud.DataModel.Setting.SettingModel)">
            <summary>   (An Action that handles HTTP PUT requests) edits. </summary>
            <remarks>   Edward, 2020-01-29. </remarks>
            <param name="id">       The identifier. </param>
            <param name="model">    The model. </param>
            <returns>   An IActionResult. </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: Setting service does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.EditMultiple(System.Collections.Generic.List{DeMasterProCloud.DataModel.Setting.SettingModel})">
            <summary>   (An Action that handles HTTP PATCH requests) edit multiple. </summary>
            <remarks>   Edward, 2020-01-29. </remarks>
            <param name="models">   The models. </param>
            <returns>   An IActionResult. </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Setting Services in Model JSOn does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SettingController.EditHeaderSetting(System.Collections.Generic.List{DeMasterProCloud.DataModel.Header.HeaderData})">
            <summary>   (An Action that handles HTTP PATCH requests) edit header setting. </summary>
            <remarks>   Edward, 2022-02-08. </remarks>
            <param name="headerData">   The header data model. </param>
            <returns>   An IActionResult. </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Setting Services in Model JSOn does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemInfoController.VerifyServerLicense(DeMasterProCloud.DataModel.SystemInfo.VerifyLicenseModel)">
            <summary>
            Verify server license
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemInfoController.MigrationAvatarUser(System.String,System.String)">
            <summary>
            Update link avatar
            </summary>
            <param name="oldUrl">Ex: https://xxx.xxx.xxx.xxx</param>
            <param name="newUrl">Ex: https://yyy.yyy.yyy.yyy</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemInfoController.MigrationLinkImageEventLog(System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Migrate url link image event-log
            </summary>
            <param name="oldUrl"></param>
            <param name="newUrl"></param>
            <param name="companyCode"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.SystemLogController">
            <summary>
            SystemLog controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.#ctor(DeMasterProCloud.Service.ISystemLogService,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,DinkToPdf.Contracts.IConverter)">
            <summary>
            Report controller
            </summary>
            <param name="systemLogService"></param>
            <param name="configuration"></param>
            <param name="httpContextAccessor"></param>
            <param name="converter"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.SystemLog(DeMasterProCloud.DataModel.SystemLog.SystemLogOperationTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of system logs with pagination. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="model"></param>
            <param name="objectType">type of object</param>
            <param name="company">company id</param>
            <param name="search">Query string that filter by user account</param>
            <param name="actionType">type of action</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.GetActionListItems(System.Int32)">
            GET /system-logs/ActionListItems
            <summary>
            Get Action List items of System Log
            </summary>
            <param name="systemLogType">type of log in system</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.GetSystemLogTypes">
            GET /system-logs/SystemLogListItems
            <summary>
            Get SystemLogTypelistItems
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.PdfView(DeMasterProCloud.DataModel.SystemLog.SystemLogOperationTime,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            View the system log data through pdf file. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="model"></param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="objectType">type of object</param>
            <param name="action">type of action</param>
            <param name="company">company id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.SystemLogController.Export(DeMasterProCloud.DataModel.SystemLog.SystemLogOperationTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            GET /system-logs/export
            <summary>
            Export file for system Logs. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="model"></param>
            <param name="objectType">type of object</param>
            <param name="company">company id</param>
            <param name="type">type of file export</param>
            <param name="filter"> text data to filter </param>
            <param name="search"> text data to filter </param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="action">type of action</param>
            <param name="actionType">type of action</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.UnregistedDeviceController">
            <summary>
            UnregistedDevice controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UnregistedDeviceController.#ctor(DeMasterProCloud.Service.IUnregistedDeviceService,DeMasterProCloud.Service.IDeviceService)">
            <summary>
            Unregisted controller
            </summary>
            <param name="unregistedDeviceService"></param>
            <param name="deviceService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UnregistedDeviceController.GetUnregisterDevices(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get the missingDevice(s)
            </summary>
            <param name="search">Query string that filter by device address or ip address</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UnregistedDeviceController.GetUnregisteredDevices(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get the missingDevice(s)
            </summary>
            <param name="search">Query string that filter by device address or ip address</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UnregistedDeviceController.AddMissingDevice(System.Collections.Generic.List{System.Int32})">
            <summary>
            Add a missingDevice to icuDevice
            </summary>
            <param name="ids"> a list of unregistered device's identifier </param>
            <response code="400">Bad Request: missing devices with unregister not null</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UnregistedDeviceController.Delete(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete unregistered device from database
            </summary>
            <param name="ids"> list of unregistered device's identifier </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of Devices do not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.UserController">
            <summary>
            User controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetInit">
            <summary>
            Get init user management page
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.Gets(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32,DeMasterProCloud.DataModel.User.UserFilterAddOns)">
            <summary>
            Get user list with pagination
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="searchAll">search all</param>
            <param name="position">Query string that filter by position</param>
            <param name="cardId">Query string that filter by cardId</param>
            <param name="empNumber">Query string that filter by empNumber</param>
            <param name="expiredDate">Query string that filter by expiredDate - format: dd.MM.yyyy HH:mm:ss</param>
            <param name="expiredDateEnd"> Query string tath filter by end of expiredDate - format : dd.MM.yyyy HH:mm:ss </param>
            <param name="departmentIds">Query string that filter by departmentIds</param>
            <param name="workTypeIds">Query string that filter by workTypeList</param>
            <param name="category"> Category option Id list </param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetsReturnUserModel(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32,DeMasterProCloud.DataModel.User.UserFilterAddOns)">
            <summary>
            Get user list with pagination
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="searchAll">search all</param>
            <param name="position">Query string that filter by position</param>
            <param name="cardId">Query string that filter by cardId</param>
            <param name="empNumber">Query string that filter by empNumber</param>
            <param name="expiredDate">Query string that filter by expiredDate - format: dd.MM.yyyy HH:mm:ss</param>
            <param name="expiredDateEnd"> Query string tath filter by end of expiredDate - format : dd.MM.yyyy HH:mm:ss </param>
            <param name="departmentIds">Query string that filter by departmentIds</param>
            <param name="workTypeIds">Query string that filter by workTypeList</param>
            <param name="category"> Category option Id list </param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetAssignUsers(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Get assigned user list in department.
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <param name="category"> filter option - category </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetUnassignUsers2(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Get unassigned user list in department.
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.Get(System.Int32)">
            <summary>
            Get user by id. In the case id = 0 then just getting initial data.
            </summary>
            <param name="id">User Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetCardCount(System.Int32)">
            <summary>
            Get Card Count by accessGroup ID
            </summary>
            <param name="id"> user identifier. </param>
            <returns> IActionResult about card count that specific user has </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.Add(DeMasterProCloud.DataModel.User.UserModel)">
            <summary>
            Add new a user
            </summary>
            <param name="model">JSON model for User</param>
            <returns></returns>
            <response code="201">Create new a user</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of Model JSON wrong. Or card is existed in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.Edit(System.Int32,DeMasterProCloud.DataModel.User.UserModel)">
            <summary>
            Edit user by id
            </summary>
            <param name="id">User Id</param>
            <param name="model">JSON model for User</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="422">Data email of Model JSON wrong.</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AddUserToAccount(System.Int32,System.String)">
            <summary>
            add account to user
            </summary>
            <param name="userId">User Id</param>
            <param name="emailAccount">email account</param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Delete a user by Id
            </summary>
            <param name="id">Id of UserLogin to delete</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.DeleteMultiple(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multiple user
            </summary>
            <param name="ids">List user id to delete</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: List of User Ids does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AccessibleDoors(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Get Door List for 1 user
            </summary>
            <param name="id">User id to Accessible Doors</param>
            <param name="search">Query string that filter by user name, address or type of device, mode of verify, passage or active</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid">valid user or all user</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AccessibleDoorsWithUser(System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Get Door List for user current
            </summary>
            <param name="search">Query string that filter by user name, address or type of device, mode of verify, passage or active</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid">valid user or all user</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ExportAccessibleDoors(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Export Door List for 1 user
            </summary>
            <param name="id">User id to Accessible Doors</param>
            <param name="search">Query string that filter by user name, address or type of device, mode of verify, passage or active</param>
            <param name="type">type of file export</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns>Json result object</returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.CreateTestData(System.Int32)">
            <summary>
            Generate test data
            </summary>
            <param name="numberOfUser">Number of list users</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.CreateTestFaceData(System.Int32,System.Boolean)">
            <summary>
            Generate test data
            </summary>
            <param name="numberOfUser">Number of list users</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ImportUser(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Import users data
            </summary>
            <param name="file">file include list of users to import</param>
            <param name="type">type of file</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of file imported wrong. Or extension file wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ExportUser(System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String)">
            <summary>
            Export user data
            </summary>
            <param name="search">Query string that filter by user name, address or type of device, mode of verify, passage or active</param>
            <param name="cardId">Query string that filter by cardId</param>
            <param name="searchAll">search all</param>
            <param name="category"> category filter </param>
            <param name="type">type of file export</param>
            <param name="isValid"> only valid user or only invalid user or all user </param>
            <param name="empNumber">Query string that filter by empNumber</param>
            <param name="expiredDate">Query string that filter by expiredDate - format: dd.MM.yyyy HH:mm:ss</param>
            <param name="expiredDateEnd"> Query string tath filter by end of expiredDate - format : dd.MM.yyyy HH:mm:ss </param>
            <param name="departmentIds">Query string that filter by departmentIds</param>
            <param name="workTypeIds">Query string that filter by workTypeList</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="position">Query string that filter by position</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ExportAssignDeptUsers(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Export assigned user list in department.
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="type"> Export type. (excel, etc.. ) </param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetListCardType">
            <summary>
            Get List of card types.
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetCardsByUser(System.Int32)">
            <summary>
            Get card by user
            </summary>
            <param name="id">User Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AddNewIdentification(System.Int32,DeMasterProCloud.DataModel.User.CardModel)">
            <summary>
            Add a new identification to exist user
            </summary>
            <param name="id">exist user Id</param>
            <param name="model">card model</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="422">Data of Model JSON wrong. Or cardId wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetCardByUser(System.Int32,System.Int32)">
            <summary>
            Get card by user
            </summary>
            <param name="id">User Id</param>
            <param name="cardId">Card Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.UpdateCardByUser(System.Int32,System.Int32,DeMasterProCloud.DataModel.User.CardModel)">
            <summary>
            Update card by user
            </summary>
            <param name="id">User Id</param>
            <param name="cardId">Card Id</param>
            <param name="model">JSON model for Card</param>
            <returns></returns>
            <response code="400">Bad request: when card Id is changed </response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id or Card Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.DeleteCardByUser(System.Int32,System.Int32)">
            <summary>
            Delete identification
            </summary>
            <param name="id">user index number</param>
            <param name="cardId">index number of card, not cardId</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id or Card Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetDynamicQrByUser">
            <summary>
            Get Dynamic QR by user
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetDynamicQrByEmail(System.String)">
            <summary>
            Get dynamic qr-code by email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetNFCPhoneIdByUser">
            <summary>
            Get NFC Phone Id by user
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetAllCardsByUser">
            <summary>
            Get card list by user
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AssignUserToDefaultWorkingTime">
            <summary>
            Assign User to Default working time
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AccessHistoryAttendance(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            View Access history Attendance by user
            </summary>
            <param name="id">User Id</param>
            <param name="start">String of date time start</param>
            <param name="end">String of date time end</param>
            <param name="eventType">event type</param>
            <param name="cardType">card type</param>
            <param name="inOut">String Antipass</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AccessHistoryAttendanceEachUser(System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            View Access history Attendance Each user
            </summary>
            <param name="start">String of date time start</param>
            <param name="end">String of date time end</param>
            <param name="eventType">event type</param>
            <param name="cardType">card type</param>
            <param name="inOut">String Antipass</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: User Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ValidationDynamicQrByUser(System.String,System.String,System.String)">
            <summary>
            Validation Dynamic QR by user
            </summary>
            <param name="dynamicQr">String of dynamic Qr-code</param>
            <param name="rid">String of RFid</param>
            <param name="actionType">Type of Action</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="404">Not Found: dynamicQr and rid not null</response>
            <response code="422">Data rid or dynamicQr wrong.</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AddAvatarForUser(System.Int32,DeMasterProCloud.DataModel.Account.AccountAvatarModel)">
            <summary>
            Update avatar user
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.SendUser(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Send specific user data to all devices.
            </summary>
            <param name="ids"> list of users th send </param>
            <param name="isSend"> true -> ADD user / false -> DELETE user </param>
            <returns></returns>
            <response code="201">Create new a user</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of Model JSON wrong. Or card is existed in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AddMultiple(System.Collections.Generic.List{DeMasterProCloud.DataModel.User.UserModel})">
            <summary>
            Add new multiple users
            </summary>
            <param name="models"> list of JSON model for User</param>
            <returns></returns>
            <response code="201">Create new a user</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of Model JSON wrong. Or card is existed in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.EditMultiple(System.Collections.Generic.List{DeMasterProCloud.DataModel.User.UserModel})">
            <summary>
            Edit multiple users
            </summary>
            <param name="models"> list of JSON model for User</param>
            <returns></returns>
            <response code="201">Create new a user</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of Model JSON wrong. Or card is existed in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetReportProblemDeviceTypes">
            <summary>
            get list of types report problem
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetAccessSetting">
            <summary>
            Get Access setting
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetApprovalAccessSetting">
            <summary>
            Get account approval access setting
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetLengthUsersReview">
            <summary>
            Get length of user's review
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.EditAccessSetting(DeMasterProCloud.DataModel.User.AccessSettingModel)">
            <summary>
            Update access setting
            </summary>
            <param name="model">JSON model for Setting visit</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approvals wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Data of Approvals wrong</response>
            <response code="404">Not Found: Access Time Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ApproveUser(System.Int32,DeMasterProCloud.DataModel.Visit.ApprovedModel)">
            <summary>
            Approve User access
            </summary>
            <param name="id"> User Id</param>
            <param name="model">JSON model include approved boolean</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetsByUserCode(System.Collections.Generic.List{System.String})">
            <summary>
            Get user data by list of user code data
            </summary>
            <param name="usercodes"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetsUsersByCondition(DeMasterProCloud.DataModel.User.UserGetConditionModel)">
            <summary>
            Get user data by several conditions
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.RemoveQR">
            <summary>
            Remove QR data by user code
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.ConvertExpiredUser">
            <summary>
            Convert expired users to Invalid
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.UpdateListAvatarUser(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            update list avatar user
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.RegisterUserInit(System.String)">
            <summary>
            Get init page register user
            </summary>
            <param name="companyCode"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.RegisterUser(System.String,DeMasterProCloud.DataModel.User.RegisterUserModel)">
            <summary>
            Register user
            </summary>
            <param name="companyCode"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.GetUserApproverSetting(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get list user approver accounts
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.AddUserApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            add user approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.UserController.DeleteUserApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            delete user approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetListVehiclesOfUser(System.String,System.Boolean,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list vehicels of users
            </summary>
            <param name="search"> search plate number or owner or mode or color </param>
            <param name="isUser">If true: get list vehicles of all uses, else false: get list vehicles of all visit</param>
            <param name="pageNumber">pageNumber</param>
            <param name="pageSize">pageSize</param>
            <param name="sortColumn">sortColumn</param>
            <param name="sortDirection">sortDirection</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetVehiclesById(System.Int32)">
            <summary>
            Get vehicle by id
            </summary>
            <param name="id">vehicle id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetListVehiclesByUser(System.Int32)">
            <summary>
            Get list vehicles by user id
            </summary>
            <param name="id">user id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.AddByUser(System.Int32,DeMasterProCloud.DataModel.Vehicle.VehicleModel)">
            <summary>
            add new vehicle of user id
            </summary>
            <param name="id">user id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.UpdateByUser(System.Int32,System.Int32,DeMasterProCloud.DataModel.Vehicle.VehicleModel)">
             <summary>
            update vehicle by user id
             </summary>
             <param name="id">user id</param>
             <param name="vehicleId">vehicle id</param>
             <param name="model"></param>
             <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.DeleteByUser(System.Int32,System.Int32)">
            <summary>
            delete vehicle by user id
            </summary>
            <param name="id">user id</param>
            <param name="vehicleId">vehicle id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetListVehiclesByVisit(System.Int32)">
            <summary>
            Get list vehicles by visitor id
            </summary>
            <param name="id">visitor id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.AddByVisit(System.Int32,DeMasterProCloud.DataModel.Vehicle.VehicleModel)">
            <summary>
            add new vehicle of visitor id
            </summary>
            <param name="id">visitor id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.UpdateByVisit(DeMasterProCloud.DataModel.Vehicle.VehicleModel,System.Int32,System.Int32)">
            <summary>
            update vehicle by visitor id
            </summary>
            <param name="id">visitor id</param>
            <param name="vehicleId">vehicle id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.DeleteByVisit(System.Int32,System.Int32)">
            <summary>
            delete vehicle by visit id
            </summary>
            <param name="id">visit id</param>
            <param name="vehicleId">vehicle id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetPersonalVehicles(System.Int32)">
            <summary>
            Get personal vehicle information.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.DeleteVehicle(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete multi vehicle
            </summary>
            <param name="ids">list vehicle id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.ImportUser(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Boolean)">
            <summary>
            Import vehicles data
            </summary>
            <param name="file">file include list of vehicles to import</param>
            <param name="type">type of file</param>
            <param name="isUser">import vehicles for user or visit</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of file imported wrong. Or extension file wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.GetFileImportVehicleTemplate(System.String,System.Boolean)">
            <summary>
            Get file template import vehicle
            </summary>
            <param name="type"></param>
            <param name="isUser"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VehicleController.ExportVehicle(System.String,System.Boolean)">
            <summary>
            Export vehicle for user or visit
            </summary>
            <param name="type">Type of file export</param>
            <param name="isUser">True is User, False is Visit</param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Controllers.VisitController">
            <summary>
            Visit controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.#ctor(DeMasterProCloud.Service.IVisitService,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IAccountService,DeMasterProCloud.Service.ICameraService,DeMasterProCloud.Service.INotificationService,DeMasterProCloud.Service.IAccessTimeService,DeMasterProCloud.Service.ICompanyService,DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IAccessGroupService,DeMasterProCloud.Service.IAccessGroupDeviceService,AutoMapper.IMapper)">
            <summary>
            VisitorController constructor
            </summary>
            <param name="visitService"></param>
            <param name="httpContextAccessor"></param>
            <param name="configuration"></param>
            <param name="accountService"></param>
            <param name="cameraService"></param>
            <param name="notificationService"></param>
            <param name="accessTimeService"></param>
            <param name="companyService"></param>
            <param name="departmentService"></param>
            <param name="userService"></param>
            <param name="accessGroupService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.Get(System.Int32)">
            <summary>
            Get visit by id. 
            </summary>
            <param name="id">Visit Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.Gets(DeMasterProCloud.DataModel.Visit.VisitOperationTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get visit list. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="model"></param>
            <param name="startDateFrom">start filter open visit from</param>
            <param name="endDateFrom">end filter open visit from</param>
            <param name="visitorName">name of visit</param>
            <param name="birthDay">date of birthday</param>
            <param name="visitorDepartment">department of visit</param>
            <param name="position">position</param>
            <param name="visiteeSite">site of visit</param>
            <param name="visitReason">reason of visit</param>
            <param name="visiteeName">name of visit</param>
            <param name="phone">phone number</param>
            <param name="processStatus">status of process</param>
            <param name="approverName1">approve name 1</param>
            <param name="approverName2">approve name 2</param>
            <param name="rejectReason">reason for reject</param>
            <param name="search">search general</param>
            <param name="cardId">card id</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetMyVisits(DeMasterProCloud.DataModel.Visit.VisitOperationTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get visit list. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="model"></param>
            <param name="visitorName">name of visit</param>
            <param name="birthDay">date of birthday</param>
            <param name="visitorDepartment">department of visit</param>
            <param name="position">position</param>
            <param name="visiteeSite">site of visit</param>
            <param name="visitReason">reason of visit</param>
            <param name="visiteeName">name of visit</param>
            <param name="phone">phone number</param>
            <param name="processStatus">status of process</param>
            <param name="approverName1">approve name 1</param>
            <param name="approverName2">approve name 2</param>
            <param name="rejectReason">reason for reject</param>
            <param name="cardId">card id</param>
            <param name="search">search general</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitReportInit">
            <summary>
            Visit Report Init
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitReport(System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get visit list with report. Filter by time model(OpeDateFrom - OpeDateTo, OpeTimeFrom - OpeTimeTo)
            </summary>
            <param name="from">Date Access Start</param>
            <param name="to">Date Access End</param>
            <param name="doorIds">list of door ids</param>
            <param name="DeviceReaderIds">list of device reader ids</param>
            <param name="visitorName">name of visitor</param>
            <param name="cardId">card id</param>
            <param name="search">search general</param>
            <param name="inOutType">type of visit(in/out)</param>
            <param name="eventType">list of event types</param>
            <param name="visiteeSite">visit of website</param>
            <param name="cardStatus">status of card</param>
            <param name="cardTypes">list of card types</param>
            <param name="visitorTypes"> list of visit types </param>
            <param name="birthDay">date of birthday</param>
            <param name="visitorDepartment">visitor department</param>
            <param name="buildingIds">building of icu</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitManageInit">
            <summary>
            Get init visit management page
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.Add(DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Add new a visit
            </summary>
            <param name="model">JSON model for Visit</param>
            <returns></returns>
            <response code="201">Create new a visit</response>
            <response code="400">Bad Request: Data approverId1 of Model JSON wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Unprocessable Entity: Data of Model JSON invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetInformationRegisterVisit(System.String,System.Int32,System.Int32)">
            <summary>
            Fill information form register
            </summary>
            <param name="companyCode">Company code</param>
            <param name="meetingId">meeting id</param>
            <param name="visitTargetId">Account company Id</param>
            <returns></returns>
            <response code="404">Company does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.RegisterVisit(System.String,System.Int32,System.Int32,System.Boolean,DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Visitor can register visit by themself
            </summary>
            <param name="companyCode">Company code</param>
            <param name="meetingId">meeting Id</param>
            <param name="visitTargetId">Account Id CreatedBy</param>
            <param name="generateImageQrCode">Enable/Disable generate link image qr-code</param>
            <param name="model">Model JSON for Visit</param>
            <returns></returns>
            <response code="201">Create new a visit</response>
            <response code="400">ReCaptcha false</response>
            <response code="404">Company does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.Edit(System.Int32,DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Edit visitor by id
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model for Visit</param>
            <returns></returns>
            <response code="400">Bad Request: account not role edit. Or status is not waiting</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit Id does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.EditForced(System.Int32,DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Edit visitor by id (No option(condition))
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model for Visit</param>
            <returns></returns>
            <response code="400">Bad Request: account not role edit. Or status is not waiting</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit Id does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON invalid</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ExportVisitManage(DeMasterProCloud.DataModel.Visit.VisitOperationTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Export visits to file
            </summary>
            <param name="model"></param>
            <param name="startDateFrom">start filter open visit from</param>
            <param name="endDateFrom">end filter open visit from</param>
            <param name="visitorName">name of visit</param>
            <param name="birthDay">date of birthday</param>
            <param name="visitorDepartment">department of visit</param>
            <param name="position">position</param>
            <param name="visiteeSite">site of visit</param>
            <param name="visitReason">reason of visit</param>
            <param name="visiteeName">name of visit</param>
            <param name="phone">phone number</param>
            <param name="cardStatus">status of card</param>
            <param name="approverName1">approve name 1</param>
            <param name="approverName2">approve name 2</param>
            <param name="rejectReason">reason for reject</param>
            <param name="cardId">card id</param>
            <param name="search">search general</param>
            <param name="type">type of file export</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ExportVisitReportManage(System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Collections.Generic.List{System.Int32},System.String,System.String,System.String)">
            <summary>
            Export visit with report to file
            </summary>
            <param name="accessDateFrom">Date Access Start</param>
            <param name="accessDateTo">Date Access End</param>
            <param name="doorIds">list of door ids</param>
            <param name="DeviceReaderIds">list of device reader ids</param>
            <param name="visitorName">name of visitor</param>
            <param name="cardId">card id</param>
            <param name="search">search general</param>
            <param name="inOutType">type of visit(in/out)</param>
            <param name="eventType">list of event types</param>
            <param name="visiteeSite">visit of website</param>
            <param name="cardStatus">status of card</param>
            <param name="cardTypes">list of card types</param>
            <param name="birthDay">date of birthday</param>
            <param name="visitorDepartment">visitor department</param>
            <param name="buildingIds">building of icu</param>
            <param name="type"></param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitPreRegisterInit">
            <summary>
            init pre-register visit 
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitPreRegister(DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Add new a visit
            </summary>
            <param name="model">JSON model for Visit</param>
            <returns></returns>
            <response code="201">Create new a visit</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.EditVisitSettingType(DeMasterProCloud.DataModel.Visit.VisitSettingModel)">
            <summary>
            Update visit setting
            </summary>
            <param name="model">JSON model for Setting visit</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approvals wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Data of Approvals wrong</response>
            <response code="404">Not Found: Access Time Id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetVisitSetting">
            <summary>
            Get visit setting
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetIdentificationVisitor(System.Int32)">
            <summary>
            Get identification of visitor
            </summary>
            <param name="id">Visit Id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddIdentificationVisitor(System.Int32,DeMasterProCloud.DataModel.User.CardModel)">
            <summary>
            Add identification to visitor
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model for identification of visitor</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="422">Not Found: Card id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddIdentificationMultiVisitor(System.Collections.Generic.List{DeMasterProCloud.DataModel.User.MultipleVisitorCardModel})">
            <summary>
            Add identification to multiple visitor
            </summary>
            <param name="models">JSON model for identification of multiple visitor</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="422">Not Found: Card id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddQRVisitor(System.Int32,System.String)">
            <summary>
            Add and send QR to visitor
            </summary>
            <param name="id">Visit Id</param>
            <param name="email">Email for visitor</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong. Or email empty</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.LinkQRCodeVisitor(System.String)">
            <summary>
            Get string base 64 qr-code
            </summary>
            <param name="tokenVisit">token include: company code and visitorId</param>
            <returns></returns>
            <response code="404">Company does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ApprovedVisitor(System.Int32,DeMasterProCloud.DataModel.Visit.ApprovedModel)">
            <summary>
            Accept visit approval
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model include approved boolean</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ApprovedMultipleVisitor(System.Collections.Generic.List{System.Int32},DeMasterProCloud.DataModel.Visit.ApprovedModel)">
            <summary>
            Accept multiple visit approval
            </summary>
            <param name="ids"> a list of visitor identifier </param>
            <param name="model">JSON model include approved boolean</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Approval wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AssingedDoorVisitor(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Assign doors to visitor ( AccessGroup )
            </summary>
            <param name="id">Visit Id</param>
            <param name="door">List of door ids</param>
            <returns></returns>
            <response code="201">Assign door to visit success</response>
            <response code="400">Bad Request: Data of Model JSON wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.RejectVisitor(System.Int32,DeMasterProCloud.DataModel.Visit.RejectedModel)">
            <summary>
            Reject visit approval
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model include reason reject</param>
            <returns></returns>
            <response code="400">Bad Request: Data of Model JSON wrong</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.VisitHistoryLog(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get visit history
            </summary>
            <param name="id">Visit Id</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetLengthVisitNeedToReview">
            <summary>
            Get count of visitor that need to review
            </summary>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ReturnCard(DeMasterProCloud.DataModel.Visit.GetBackVisit)">
            <summary>
            Return visitor's card.
            </summary>
            <param name="model">JSON model include cardId, reason of visit and list of visit ids</param>
            <returns></returns>
            <response code="400">Bad Request: Card ID can not be blank</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ReturnMultipleCard(System.Collections.Generic.List{DeMasterProCloud.DataModel.Visit.VisitCardReturnModel})">
            <summary>
            Return multiple visitor's card.
            </summary>
            <param name="models">JSON model include cardId, reason of visit and list of visit ids</param>
            <returns></returns>
            <response code="400">Bad Request: Card ID can not be blank</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.Delete(System.Int32)">
            <summary>
            Delete Visit by id
            </summary>
            <param name="id">Visit Id</param>
            <returns></returns>
            <response code="400">Bad Request: Account has not role delete</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteRange(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete Visit by list of id
            </summary>
            <param name="ids">Visit Id</param>
            <returns></returns>
            <response code="400">Bad Request: Account has not role delete</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteForced(System.Int32)">
            <summary>
            Delete Visit by id (No option(condition))
            </summary>
            <param name="id">Visit Id</param>
            <returns></returns>
            <response code="400">Bad Request: Account has not role delete</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteRangeForced(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete Visit by list of id (No option(condition))
            </summary>
            <param name="ids"> List of visitor identifier </param>
            <returns></returns>
            <response code="400">Bad Request: Account has not role delete</response>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: Visit id does not exist in DB</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetHistoryVisitor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Return History of Visitor
            </summary>
            <param name="id">VisitId</param>
            <param name="pageNumber">current page number</param>
            <param name="pageSize">Number of items to show on a page</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetUsersTarget(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Get user list with pagination
            </summary>
            <param name="search">Query string that filter by user name, email, name of department or expired date</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string of the column.</param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <param name="isValid"> valid user or invalid user or all user </param>
            <param name="departmentId"> identifier of department </param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetRegisterVisitUsersTarget(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get user target by company code
            </summary>
            <param name="name"></param>
            <param name="departmentIds"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <param name="companyCode"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetAllInfoVisitorByCardId(System.String)">
            <summary>
            Get all info visit card army
            </summary>
            <param name="cardId"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetFirstApproverSetting(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get list first approver accounts
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddFirstApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            add first approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteFirstApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            delete first approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetSecondApproverSetting(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get list second approver accounts
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddSecondApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            add second approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteSecondApproverSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            delete second approver accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetCheckManagerSetting(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            get list check manager accounts
            </summary>
            <param name="search"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortDirection"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AddCheckManagerSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            add visit check manager accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.DeleteCheckManagerSetting(System.Collections.Generic.List{System.Int32})">
            <summary>
            delete visit check manager accounts
            </summary>
            <param name="ids">account ids</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AssignDoors(System.Int32,DeMasterProCloud.DataModel.AccessGroup.AccessGroupAssignDoor)">
            <summary>
            Assign doors to an access group with visitor
            </summary>
            <param name="id">Visit Id</param>
            <param name="model">JSON model for (doorId, timezoneId and companyId)</param>
            <returns></returns>
            <response code="400">Bad Request: Access group Id does not exist, model of the doors empty</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.UnAssignDoors(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Remove doors from an access group with visitors
            </summary>
            <param name="id">Visitor Id</param>
            <param name="doorIds">List of ids with doors</param>
            <returns></returns>
            <response code="400">Bad Request: Access group Id does not exist, model of the doors empty</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
            <response code="500">Internal Server Error: Lack of String Bearer Token</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetVisitorByQrCode(System.String)">
            <summary>
            Get visitor by qrcode
            </summary>
            <param name="qrCode"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetVisitorsByCardIds(System.Collections.Generic.List{System.String})">
            <summary>
            Get visitors by cardIds
            </summary>
            <param name="cardIds"> A list of cardId. </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetVisitorCardByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            Get card information by visitId
            </summary>
            <param name="ids"> a list of visitor identifier </param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.UpdateSettingLayoutRegister(DeMasterProCloud.DataModel.Visit.FieldLayoutRegister)">
            <summary>
            Update layout form visit register
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AnonymousGetVisitorByPhone(System.String,System.String)">
            <summary>
            Anonymous get visitor by phone (page register visit)
            </summary>
            <param name="companyCode"></param>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.AnonymousGetDepartmentTarget(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Anonymous get departments target
            </summary>
            <param name="companyCode">code of company</param>
            <param name="name"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.RegisterVisitAuthentication(DeMasterProCloud.DataModel.Login.LoginModel,System.String)">
            <summary>
            authentication and get setting app register visit
            </summary>
            <param name="loginModel">Enter account/password</param>
            <param name="companyCode">Company Code (using for account has multi company account)</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.GetFileImportVisitTemplate(System.String)">
            <summary>
            Get file template import visit
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ImportVisitor(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Import visitors data
            </summary>
            <param name="file">file include list of visitors to import</param>
            <param name="type">type of file</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="403">Forbidden: Login with other account with role higher</response>
            <response code="422">Data of file imported wrong. Or extension file wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.VisitController.ImportMultiVisitors(System.String,System.Collections.Generic.List{DeMasterProCloud.DataModel.Visit.ImportMultiVisitModel})">
            <summary>
            Import multi visitors
            </summary>
            <param name="code"></param>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.GetFileFromPath(System.String,System.String,System.String,System.String)">
            <summary>
            Get image static from link file local
            </summary>
            <param name="rootFolder"></param>
            <param name="companyCode"></param>
            <param name="date"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.GetFileFromPathByCategory(System.String,System.String,System.String,System.String)">
            <summary>
            Get image static from link file local for categories like avatar, visitor
            </summary>
            <param name="rootFolder"></param>
            <param name="companyCode"></param>
            <param name="category"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.IsUnicode(System.String)">
            <summary>
            Check string is contains unicode
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.UnicodeToString(System.String)">
            <summary>
            Unicode Decoding with XSS protection
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.GetFullPathByShortenLink(System.String)">
            <summary>
            Get full path by short path
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.GetFileHanetFromPath(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get image static from path hanet
            </summary>
            <param name="cameraId"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="date"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.ReceiverDataCheckInFromTsCamera(Microsoft.AspNetCore.Http.IFormFile,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Receive event data checkin from DC camera.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DeMasterProCloud.Api.Controllers.WebhookAnonymousController.GetFingerprintTemplate(System.Int32)" -->
        <member name="T:DeMasterProCloud.Api.Controllers.WorkingTypeController">
            <summary>
            Working type controller
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.#ctor(DeMasterProCloud.Service.IWorkingService,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IAttendanceService,DeMasterProCloud.Service.IUserService,AutoMapper.IMapper)">
            <summary>
            Working type controller
            </summary>
            <param name="workingService"></param>
            <param name="httpContextAccessor"></param>
            <param name="configuration"></param>
            <param name="attendanceService"></param>
            <param name="userService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.Get(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get WorkingType(s)
            </summary>
            <param name="search">Not use</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.GetDetail(System.Int32)">
            <summary>
            Get Working Type by id
            </summary>
            <param name="id">Working type id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.Add(DeMasterProCloud.DataModel.WorkingModel.WorkingModel)">
            <summary>
            Add new a working type
            </summary>
            <param name="model">JSON model for WorkingType</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.Edit(System.Int32,DeMasterProCloud.DataModel.WorkingModel.WorkingModel)">
            <summary>
                updates working type. 
            </summary>
            <remarks>   Edward, 2020-03-11. </remarks>
            <param name="id">       The identifier of working type. </param>
            <param name="model">    workingTime model. </param>
            <returns>   An IActionResult. </returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: working type does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.DeletedWorkingType(System.Int32)">
            <summary>
            Deleted Working Type
            </summary>
            <param name="id">Working type id</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: working type does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkingTypeController.AssignMultipleUserToDefaultWorkingTime(System.Int32,System.String)">
            <summary>
            Assign Multiple User to Default working time
            </summary>
            <param name="id">Working type id</param>
            <param name="listUser">List of User</param>
            <returns></returns>
            <response code="401">Unauthorized: Lack of String Token Bearer</response>
            <response code="404">Not Found: List userId of string listUser does not exist in DB</response>
            <response code="422">Unprocessable Entity: Data of Model JSON wrong</response>
            <response code="429">Too Many Requests: Quota exceeded. Maximum allowed: 10 per 1s, 500 per 1m, 2000 per 1d.</response>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.#ctor(DeMasterProCloud.Service.IWorkShiftService,DeMasterProCloud.Service.IDeviceService,DeMasterProCloud.Service.IUserService,DeMasterProCloud.Service.IAccountService,Microsoft.AspNetCore.Http.IHttpContextAccessor,DeMasterProCloud.Service.IDepartmentService,DeMasterProCloud.Service.IAccessGroupService)">
            <summary>
            
            </summary>
            <param name="workShiftService"></param>
            <param name="deviceService"></param>
            <param name="userService"></param>
            <param name="accountService"></param>
            <param name="httpContextAccessor"></param>
            <param name="departmentService"></param>
            <param name="accessGroupService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.GetInit">
            <summary>
            Get init workShift page
            </summary>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.Gets(System.String,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get list of workShift 
            </summary>
            <param name="name">Name of workShift</param>
            <param name="userIds">List of user ids</param>
            <param name="pageNumber">Page number start from 1.</param>
            <param name="pageSize">Number of items per page</param>
            <param name="sortColumn">Sort Column by string name of the column. Example </param>
            <param name="sortDirection">Sort direction: ‘desc’ for descending , ‘asc’ for ascending</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.Get(System.Int32)">
            <summary>
            Get workShift by id
            </summary>
            <param name="id">WorkShift Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.Add(DeMasterProCloud.DataModel.WorkShift.WorkShiftModel)">
            <summary>
            Add new workShift
            </summary>
            <param name="model">WorkShift model with StartTime and EndTime in HH:mm format (e.g. "09:00" for 9:00)</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.Edit(System.Int32,DeMasterProCloud.DataModel.WorkShift.WorkShiftModel)">
            <summary>
            Edit workShift
            </summary>
            <param name="id">WorkShift Id</param>
            <param name="model">WorkShift model with StartTime and EndTime in HH:mm format (e.g. "09:00" for 9:00)</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.Delete(System.Int32)">
            <summary>
            Delete workShift
            </summary>
            <param name="id">WorkShift Id</param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Controllers.WorkShiftController.DeleteRange(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete list workShifts
            </summary>
            <param name="ids">List of ids workShift</param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Filters.AuthorizeFilter">
            <summary>
            Authorize filter
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Filters.AuthorizeFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Filters.TrimStringPropertiesActionFilter">
            <summary>
            Action filter to automatically trim string properties on all incoming models
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Filters.ValidateModelFilter">
            <summary>
            Validate model filter
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Filters.ValidateModelFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            OnActionExecutionAsync
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.AccessGroupDeviceMapping">
            <summary>
            AccessGroupDevice Mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccessGroupDeviceMapping.#ctor">
            <summary>
            AccessGroupDevice mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.AccessGroupMapping">
            <summary>
            AccessGroup mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccessGroupMapping.#ctor">
            <summary>
            AccessGroup mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccessScheduleMapping.#ctor">
            <summary>
            MealType mapping.
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.AccessTimeMapping">
            <summary>
            Define timezone Mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccessTimeMapping.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccessTimeMapping.ConvertToDayDetail(System.String)">
            <summary>
            Convert json string to datetime
            </summary>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.AccountMapping">
            <summary>
            Create mapping for account
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AccountMapping.#ctor">
            <summary>
            Ctor for mapping account
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.AttendanceMapping">
            <summary>
            Attendance Mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.AttendanceMapping.#ctor">
            <summary>
            Attendance Mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.BuildingMapping">
            <summary>
            Create mapping for building
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.BuildingMapping.#ctor">
            <summary>
            Ctor for mapping Building
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.CardMapping">
            <summary>
            Config mapping for Card
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.CardMapping.#ctor">
            <summary>
            ctor card mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.CompanyMapping">
            <summary>
            CompanyMapping class
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.CompanyMapping.#ctor">
            <summary>
            Company Mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.DepartmentMapping">
            <summary>
            Config mapping for deparment models
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.DepartmentMapping.#ctor">
            <summary>
            ctor no params
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.DeviceMapping">
            <summary>
            Mapping define for Device
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.DeviceMapping.#ctor">
            <summary>
            Ctor DeviceMapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.EvenLogMapping">
            <summary>
            Mapping define for EventLog
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.EvenLogMapping.#ctor">
            <summary>
            Ctor for EvenLogMapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.HolidayMapping">
            <summary>
            Define HolidayMapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.HolidayMapping.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.HolidayMapping.GetListDates(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.SettingMapping">
            <summary>
            SettingMapping class
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.SettingMapping.#ctor">
            <summary>
            Setting Mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.UnregistedDeviceMapping">
            <summary>
            UnregistedDevice mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.UnregistedDeviceMapping.#ctor">
            <summary>
            UnregisteredDevice mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.UserLogMapping">
            <summary>
            Define usser log mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.UserLogMapping.#ctor">
            <summary>
            Define usser log mapping ( UserLog to UserProtocolDetailData )
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.UserMapping">
            <summary>
            Config mapping for user
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.UserMapping.#ctor">
            <summary>
            ctor user mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.VisitMapping">
            <summary>
            Config mapping for user
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.VisitMapping.#ctor">
            <summary>
            ctor user mapping
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Mapper.WorkingTypeMapping">
            <summary>
            Working type mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.WorkingTypeMapping.#ctor">
            <summary>
            Working type mapping
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Mapper.WorkShiftMapping.#ctor">
            <summary>
            MealType mapping.
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Middlewares.ErrorHandlerMiddleware">
            <summary>
            Custom error handle middleware
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Middlewares.ErrorHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{DeMasterProCloud.Api.Infrastructure.Middlewares.ErrorHandlerMiddleware},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Ctor
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="mailService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Middlewares.ErrorHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Middlewares.RequestLocalizationMiddleware">
            <summary>
            Request Localization middleware
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Middlewares.RequestLocalizationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Options.IOptions{System.Collections.Generic.List{System.String}})">
            <summary>
            Request localization in middle ware
            </summary>
            <param name="next"></param>
            <param name="configuration"></param>
            <param name="options"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Middlewares.RequestLocalizationMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Middlewares.RequestLocalizationMiddleware.SetCurrentCulture(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Set culture for each api request
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Utilities.StringModelBinder">
            <summary>
            A custom ModelBinder for strings
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Utilities.StringModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Bind model async
            </summary>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Utilities.ModelBinderProvider">
            <summary>
            A custom ModelBinderProvider that references the custom ModelBinder
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Utilities.ModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <summary>
            Get binder
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.AccessGroupValidation">
            <summary>
            AccessGroup validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.AccessGroupValidation.#ctor(DeMasterProCloud.Service.IAccessGroupService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            AccessGroup validation
            </summary>
            <param name="accessGroupService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.AccessScheduleValidation.#ctor(DeMasterProCloud.Service.IAccessScheduleService)">
            <summary>
            AccessSchedule validation
            </summary>
            <param name="accessScheduleService"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.AccessTimeValidation">
            <summary>
            AccessTime validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.AccessTimeValidation.#ctor(DeMasterProCloud.Service.IAccessTimeService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            AccessTime validation
            </summary>
            <param name="accessTimeService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.AccountValidation">
            <summary>
            Validation for account model
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.AccountValidation.#ctor(DeMasterProCloud.Service.IAccountService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Ctor
            </summary>
            <param name="accountService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.ForgotPasswordValidation">
            <summary>
            Forget password validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.ForgotPasswordValidation.#ctor">
            <summary>
            Forgot password validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.ResetPasswordValidation">
            <summary>
            Reset Password Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.ResetPasswordValidation.#ctor">
            <summary>
            Reset Password Validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.ChangePasswordModelValidation">
            <summary>
            Reset Password Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.ChangePasswordModelValidation.#ctor(DeMasterProCloud.Service.IAccountService)">
            <summary>
            Reset Password Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.ChangePasswordLoginModelValidation.#ctor(DeMasterProCloud.Service.IAccountService)">
            <summary>
            Reset Password Validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.BaseValidation`1">
            <summary>
            Base validation class containing common validation methods
            </summary>
            <typeparam name="T">The model type to validate</typeparam>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.BaseValidation`1.ContainsOnlySafeCharacters(System.String)">
            <summary>
            Checks if a string contains only safe characters using the Helpers class
            </summary>
            <param name="input">The string to validate</param>
            <returns>True if the string contains only safe characters</returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.BaseValidation`1.NotContainsCode(System.String)">
            <summary>
            Checks if a string contains only safe characters using the Helpers class
            </summary>
            <param name="input">The string to validate</param>
            <returns>True if the string contains only safe characters</returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.BuildingValidation">
            <summary>
            Building validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.BuildingValidation.#ctor(DeMasterProCloud.Service.IBuildingService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Building validation.
            </summary>
            <param name="buildingService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.CameraValidation.#ctor(DeMasterProCloud.Service.ICameraService)">
            <summary>
            camera validation.
            </summary>
            <param name="cameraService"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.CardValidation">
            <summary>
            Card Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.CardValidation.#ctor">
            <summary>
            Card Validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.CompanyValidation">
            <summary>
            company validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.CompanyValidation.#ctor(DeMasterProCloud.Service.ICompanyService,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            company validation
            </summary>
            <param name="companyService"></param>
            <param name="configuration"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.DepartmentValidation">
            <summary>
            Department validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.DepartmentValidation.#ctor(DeMasterProCloud.Service.IDepartmentService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Department validation
            </summary>
            <param name="departmentService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.DeviceReaderValidation">
            <summary>
            DeviceReader validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.DeviceReaderValidation.#ctor(DeMasterProCloud.Service.IDeviceReaderService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            DeviceReader validation
            </summary>
            <param name="deviceReaderService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.DeviceValidation">
            <summary>
            Device Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.DeviceValidation.#ctor(DeMasterProCloud.Service.IDeviceService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Device Validation
            </summary>
            <param name="deviceService"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.EventLogValidation">
            <summary>
            EventLog validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.EventLogValidation.#ctor">
            <summary>
            EventLog validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.HolidayValidation">
            <summary>
            Holiday validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.HolidayValidation.#ctor(DeMasterProCloud.Service.IHolidayService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Holiday validation
            </summary>
            <param name="holidayService"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.HolidaysValidation">
            <summary>
            A list of Holiday validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.LoginValidation">
            <summary>
            Login validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.LoginValidation.#ctor">
            <summary>
            Login validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.RoleValidation">
             <summary>   A Role validation. </summary>
            
             <remarks>   Edward, 2020-06-30. </remarks>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.RoleValidation.#ctor(DeMasterProCloud.Service.IRoleService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
             <summary>   Constructor. </summary>
            
             <remarks>   Edward, 2020-06-30. </remarks>
            
             <param name="roleService">   The role service.  </param>
             <param name="httpContextAccessor"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.SettingValidation">
            <summary>
            Setting validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.SettingValidation.#ctor(DeMasterProCloud.Service.ISettingService)">
            <summary>
            Setting validation
            </summary>
            <param name="settingService"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.ReportValidation">
            <summary>
            Report validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.ReportValidation.#ctor">
            <summary>
            Report validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.SystemLogValidation">
            <summary>
            SystemLog Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.SystemLogValidation.#ctor">
            <summary>
            SystemLog Validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.SystemLogOperationTimeValidation">
            <summary>
            SystemLog OperationTime Validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.SystemLogOperationTimeValidation.#ctor">
            <summary>
            SystemLog OperationTime Validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.UserValidation">
             <summary>   A user validation. </summary>
            
             <remarks>   Edward, 2020-01-30. </remarks>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.UserValidation.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IUserService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
             <summary>   Constructor. </summary>
            
             <remarks>   Edward, 2020-01-30. </remarks>
            
             <param name="configuration">    The configuration. </param>
             <param name="userService">      The user service. </param>
             <param name="httpContextAccessor"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.UserValidation.ValidateBirthdayIsInPast(System.String)">
            <summary>
            Validates that birthday is in the past (less than current date)
            </summary>
            <param name="birthday">The birthday string to validate</param>
            <returns>True if birthday is in the past, false otherwise</returns>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.VehicleValidation.#ctor(DeMasterProCloud.Service.IVehicleService)">
            <summary>
            vehicle validation.
            </summary>
            <param name="vehicleService"></param>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.VisitValidation">
            <summary>
            Validation for visitor
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.VisitValidation.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DeMasterProCloud.Service.IVisitService)">
            <summary>
            Validation for visitor
            </summary>
            <param name="configuration"></param>
            <param name="visitService"></param>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.VisitValidation.ValidateStartDateBeforeEndDate(DeMasterProCloud.DataModel.Visit.VisitModel)">
            <summary>
            Validates that start date is before end date
            </summary>
            <param name="visit">The visit model to validate</param>
            <returns>True if start date is before end date, false otherwise</returns>
        </member>
        <member name="T:DeMasterProCloud.Api.Infrastructure.Validation.WorkShiftValidation">
            <summary>
            WorkShift validation
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Infrastructure.Validation.WorkShiftValidation.#ctor(DeMasterProCloud.Service.IWorkShiftService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            WorkShift validation
            </summary>
        </member>
        <member name="T:DeMasterProCloud.Api.Program">
            <summary>
            Demaster-pro cloud API
            </summary>
        </member>
        <member name="M:DeMasterProCloud.Api.Program.Main(System.String[])">
            <summary>
            This is main
            </summary>
            <param name="args"></param>
        </member>
    </members>
</doc>
