<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IblSite2" xml:space="preserve">
    <value>Site</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblAccessTime" xml:space="preserve">
    <value>Access Time</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblApplyDate" xml:space="preserve">
    <value>Apply Date</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblApproval1" xml:space="preserve">
    <value>Approver1</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblApproval2" xml:space="preserve">
    <value>Approver2</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblApprovalWaiting1" xml:space="preserve">
    <value>Approval Waiting 1</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblApprovalWaiting2" xml:space="preserve">
    <value>Approval Waiting 2</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblBirthDay" xml:space="preserve">
    <value>Birth Day</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblCardID" xml:space="preserve">
    <value>CardID</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblCardStatus" xml:space="preserve">
    <value>Card Status</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblDelivered" xml:space="preserve">
    <value>Delivered</value>
    <comment>방문증 상태에 사용</comment>
  </data>
  <data name="lblDeliveryOk" xml:space="preserve">
    <value>Delivery Ok</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblDeliveryWaiting" xml:space="preserve">
    <value>Delivery Waiting</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblDepartment" xml:space="preserve">
    <value>Department</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblDoorName" xml:space="preserve">
    <value>Door Name</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblEndDate" xml:space="preserve">
    <value>End Date</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblEventDetail" xml:space="preserve">
    <value>Event Detail</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblExport" xml:space="preserve">
    <value>Export</value>
    <comment>Export파일명(의미X)</comment>
  </data>
  <data name="lblID" xml:space="preserve">
    <value>Visit ID</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblIDX" xml:space="preserve">
    <value>IDX</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblInOut" xml:space="preserve">
    <value>I/O</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblInsider" xml:space="preserve">
    <value>Insider</value>
    <comment>방문 타입(내부자, 외부자)</comment>
  </data>
  <data name="lblIssueCount" xml:space="preserve">
    <value>Issue Count</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblIssueing" xml:space="preserve">
    <value>Issueing</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblNotUse" xml:space="preserve">
    <value>Not Use</value>
    <comment>lblNotUse</comment>
  </data>
  <data name="lblOutsider" xml:space="preserve">
    <value>Outsider</value>
    <comment>방문 타입(내부자, 외부자)</comment>
  </data>
  <data name="lblPhone" xml:space="preserve">
    <value>Phone</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblPosition" xml:space="preserve">
    <value>Position</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblProcedureOmission" xml:space="preserve">
    <value>Procedure Omission</value>
    <comment>현재 사용 X</comment>
  </data>
  <data name="lblReason" xml:space="preserve">
    <value>Work content</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblReclamation" xml:space="preserve">
    <value>Reclamation</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblReject" xml:space="preserve">
    <value>Rejected</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblRejectCardID" xml:space="preserve">
    <value>CardID</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblRejectReason" xml:space="preserve">
    <value>Reject Reason</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblReturn" xml:space="preserve">
    <value>Return</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblReturned" xml:space="preserve">
    <value>Returned</value>
    <comment>방문증 상태에 사용</comment>
  </data>
  <data name="lblRID" xml:space="preserve">
    <value>RID</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblSite" xml:space="preserve">
    <value>Visit Site</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblStartDate" xml:space="preserve">
    <value>Start Date</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblUserName" xml:space="preserve">
    <value>User Name</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblVisit" xml:space="preserve">
    <value>Visit</value>
    <comment>신규 방문증 등록시 유저 명 디폴트(방문 000000)</comment>
  </data>
  <data name="lblVisitName" xml:space="preserve">
    <value>Visitor Name</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblVisitTarget" xml:space="preserve">
    <value>Visit target</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="msgExportVisitList" xml:space="preserve">
    <value>Export Visit list</value>
    <comment>시스템 로그</comment>
  </data>
  <data name="msgLogin" xml:space="preserve">
    <value>Login</value>
    <comment>시스템 로그</comment>
  </data>
  <data name="lblPreRegister" xml:space="preserve">
    <value>VIsit Register In advanced</value>
    <comment>방문 상태에 사용</comment>
  </data>
  <data name="lblRequest" xml:space="preserve">
    <value>Request</value>
    <comment>방문증 상태에 사용</comment>
  </data>
  <data name="msgAlreadyDeliveredCard" xml:space="preserve">
    <value>This Card was delivered already.</value>
    <comment>카드 중복 교부 유효성 체크</comment>
  </data>
  <data name="msgAlreadyReturnedCard" xml:space="preserve">
    <value>This card was returned already.</value>
    <comment>카드 중복 회수 유효성 체크</comment>
  </data>
  <data name="msgNotDeliveredCard" xml:space="preserve">
    <value>This card was not delivered.</value>
    <comment>교부되지 않은 카드 회수 시 유효성 체크</comment>
  </data>
  <data name="msgNotVisitCard" xml:space="preserve">
    <value>This card is not visit card.</value>
    <comment>방문증이 아닌카드 회수 시 유효성 체크</comment>
  </data>
  <data name="lblApprove1" xml:space="preserve">
    <value>Approve1</value>
    <comment>현재 사용 X</comment>
  </data>
  <data name="lblApprove2" xml:space="preserve">
    <value>Approve2</value>
    <comment>현재 사용 X</comment>
  </data>
  <data name="lblReject1" xml:space="preserve">
    <value>Reject1</value>
    <comment>현재 사용 X</comment>
  </data>
  <data name="lblReject2" xml:space="preserve">
    <value>Reject2</value>
    <comment>현재 사용 X</comment>
  </data>
  <data name="msgNotApprovedVisit" xml:space="preserve">
    <value>This visit is not approved.</value>
    <comment>승인되지 않은 카드 교부 시 유효성 체크</comment>
  </data>
  <data name="lblVisitStatus" xml:space="preserve">
    <value>Status</value>
    <comment>Import / Export의 헤더로 사용</comment>
  </data>
  <data name="lblVisitNoStep" xml:space="preserve">
    <value>NoStep</value>
  </data>
  <data name="lblVisitFirstStep" xml:space="preserve">
    <value>FirstStep</value>
  </data>
  <data name="lblVisitSecondStep" xml:space="preserve">
    <value>SecondStep</value>
  </data>
  <data name="lblVisitSetting" xml:space="preserve">
    <value>Visit Setting</value>
  </data>
  <data name="lblCompany" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="RequiredApprover" xml:space="preserve">
    <value>Required Approver</value>
  </data>
  <data name="lblWaiting" xml:space="preserve">
    <value>Waiting</value>
  </data>
  <data name="lblFinished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="lblFinishedWithoutReturnCard" xml:space="preserve">
    <value>Finished without return card</value>
  </data>
  <data name="lblCivilian" xml:space="preserve">
    <value>Civilian</value>
  </data>
  <data name="lblAnotherArmy" xml:space="preserve">
    <value>A member of another unit</value>
  </data>
  <data name="lblArmyFamily" xml:space="preserve">
    <value>A soldier's family</value>
  </data>
  <data name="lblResidentCivilian" xml:space="preserve">
    <value>Resident civilian</value>
  </data>
  <data name="lblApproved1" xml:space="preserve">
    <value>Approved1</value>
  </data>
  <data name="lblApproved2" xml:space="preserve">
    <value>Approved2</value>
  </data>
  <data name="lblApproved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="lblCardIssued" xml:space="preserve">
    <value>Card Issued</value>
  </data>
  <data name="contentVisitorNotification" xml:space="preserve">
    <value>Visitor {0} with date visit from {1} is waiting for your approval</value>
  </data>
  <data name="ApproveNotification" xml:space="preserve">
    <value>Request for visitor {0} has been {1}</value>
  </data>
  <data name="lblApproval" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="RejectNotification" xml:space="preserve">
    <value>Request for visitor {0} has been {1}</value>
  </data>
  <data name="smsContentSendQRcode" xml:space="preserve">
    <value>Your Visit application to company {0} has been approved. Please use QR code follow link: {1}</value>
  </data>
  <data name="LocationVirus" xml:space="preserve">
    <value>Location virus COVID</value>
  </data>
  <data name="lblAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="lblNationalIdNumber" xml:space="preserve">
    <value>National Id Number</value>
  </data>
  <data name="lblOtherUnitMember" xml:space="preserve">
    <value>Other Unit Member</value>
  </data>
  <data name="lblMilitaryNumber" xml:space="preserve">
    <value>Military Number</value>
  </data>
  <data name="lblVisitType" xml:space="preserve">
    <value>Visit Type</value>
  </data>
  <data name="msgRequiredFirstApproval" xml:space="preserve">
    <value>1st approval required</value>
  </data>
  <data name="lblCardReturned" xml:space="preserve">
    <value>Card Returned</value>
  </data>
  <data name="lblAutoApproved" xml:space="preserve">
    <value>Auto approved</value>
  </data>
  <data name="lblMultiVisitorName" xml:space="preserve">
    <value>{1} visitors including {0}</value>
  </data>
  <data name="lblEquipmentName" xml:space="preserve">
    <value>Equipment name</value>
  </data>
  <data name="lblEquipmentModelName" xml:space="preserve">
    <value>Model name</value>
  </data>
  <data name="lblEquipmentSerialNumber" xml:space="preserve">
    <value>Serial number</value>
  </data>
  <data name="lblLeader" xml:space="preserve">
    <value>Visit leader</value>
  </data>
  <data name="titlePushNotificationToVisitee" xml:space="preserve">
    <value>Your visitor has been approved</value>
  </data>
  <data name="bodyPushNotificationToVisitee" xml:space="preserve">
    <value>Visitor Name: {0}. Time Access: {1}.</value>
  </data>
  <data name="lblVisitFromOut" xml:space="preserve">
    <value>Visiting outside</value>
    <comment>외래</comment>
  </data>
  <data name="msgOnlyAccessSingleBuilding" xml:space="preserve">
    <value>You can only apply to one place.</value>
  </data>
  <data name="msgNoDoorNotice" xml:space="preserve">
    <value>No doors selected. Do you want to continue?</value>
  </data>
   <data name="msgAddVisit" xml:space="preserve">
    <value>Add Visit</value>
  </data>
  <data name="msgDeleteVisit" xml:space="preserve">
    <value>Delete Visit</value>
  </data>
  <data name="msgUpdateVisit" xml:space="preserve">
    <value>Update Visit</value>
  </data>
  <data name="lblCMND" xml:space="preserve">
    <value>CMND</value>
  </data>
  <data name="lblCCCD" xml:space="preserve">
    <value>CCCD</value>
  </data>
  <data name="lblPassport" xml:space="preserve">
    <value>Passport</value>
  </data>
  <data name="lblIdentificationOther" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="lblVisiteeDepartment" xml:space="preserve">
    <value>Visitee Department</value>
  </data>
  <data name="lblRoomNumber" xml:space="preserve">
    <value>Room Number</value>
  </data>
  <data name="lblDocumentNumber" xml:space="preserve">
    <value>Document Number</value>
  </data>
  <data name="lblListVisitPurpose" xml:space="preserve">
    <value>List Visit Purpose</value>
  </data>
</root>