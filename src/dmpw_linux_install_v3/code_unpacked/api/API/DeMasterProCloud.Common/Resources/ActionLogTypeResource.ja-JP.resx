<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleDoorExport" xml:space="preserve">
    <value>アクセス可能なドアリストのエクスポート</value>
  </data>
  <data name="ActiveDoor" xml:space="preserve">
    <value>アクティブドア</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="AnalysisExport" xml:space="preserve">
    <value>分析エクスポート</value>
  </data>
  <data name="AssignDoor" xml:space="preserve">
    <value>ドアの割り当て</value>
  </data>
  <data name="AssignUser" xml:space="preserve">
    <value>ユーザの割り当て</value>
  </data>
  <data name="AssignUsersToDoor" xml:space="preserve">
    <value>ユーザーをドアに割り当てます</value>
  </data>
  <data name="AutoRegister" xml:space="preserve">
    <value>自動登録</value>
  </data>
  <data name="BasicInfoTransmit" xml:space="preserve">
    <value>基本的な情報送信</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>パスワードを変更</value>
  </data>
  <data name="ChangeTimezone" xml:space="preserve">
    <value>タイムゾーンを変更</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>コマンド</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="CopyDoorSetting" xml:space="preserve">
    <value>ドア設定のコピー</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="DeleteMultiple" xml:space="preserve">
    <value>複数削除</value>
  </data>
  <data name="DeleteMultipleType" xml:space="preserve">
    <value>複数{0}を削除</value>
  </data>
  <data name="DoorDeleteMultiple" xml:space="preserve">
    <value>複数ドアの削除</value>
  </data>
  <data name="DoorOpen" xml:space="preserve">
    <value>ドアが開く</value>
  </data>
  <data name="DoorUpdate" xml:space="preserve">
    <value>ドアの更新</value>
  </data>
  <data name="EventExport" xml:space="preserve">
    <value>イベントのエクスポート</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>失敗</value>
  </data>
  <data name="ForcedClose" xml:space="preserve">
    <value>強制クローズ</value>
  </data>
  <data name="ForcedOpen" xml:space="preserve">
    <value>強制オープン</value>
  </data>
  <data name="HolidayTransmit" xml:space="preserve">
    <value>休日送信</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="InactiveDoor" xml:space="preserve">
    <value>無効なドア</value>
  </data>
  <data name="InvalidDoor" xml:space="preserve">
    <value>ドアの無効化</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>ログイン</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>ログアウト</value>
  </data>
  <data name="MoveDepartment" xml:space="preserve">
    <value>ユーザー部署を変更</value>
  </data>
  <data name="Recovery" xml:space="preserve">
    <value>イベント復旧</value>
  </data>
  <data name="RegisteredUserExport" xml:space="preserve">
    <value>登録済みのユーザーエクスポートです</value>
  </data>
  <data name="Reinstall" xml:space="preserve">
    <value>ドアの設定を再インストール</value>
  </data>
  <data name="Release" xml:space="preserve">
    <value>緊急解除</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>再起動</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>成功</value>
  </data>
  <data name="Sync" xml:space="preserve">
    <value>同期化</value>
  </data>
  <data name="SystemLogExport" xml:space="preserve">
    <value>システム ログのエクスポート</value>
  </data>
  <data name="TimezoneTransmit" xml:space="preserve">
    <value>タイムゾーン送信</value>
  </data>
  <data name="Transmit" xml:space="preserve">
    <value>送信</value>
  </data>
  <data name="UnassignDoor" xml:space="preserve">
    <value>ドアの割り当て解除</value>
  </data>
  <data name="UnassignUser" xml:space="preserve">
    <value>ユーザの割り当て解除</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>アップデート</value>
  </data>
  <data name="UpdateDoor" xml:space="preserve">
    <value>ドア変更</value>
  </data>
  <data name="UpdateMultipleUser" xml:space="preserve">
    <value>複数のユーザーを変更</value>
  </data>
  <data name="UserAdd" xml:space="preserve">
    <value>ユーザー追加</value>
  </data>
  <data name="UserDelete" xml:space="preserve">
    <value>ユーザー削除</value>
  </data>
  <data name="UserDeleteMultiple" xml:space="preserve">
    <value>複数ユーザー削除</value>
  </data>
  <data name="ValidDoor" xml:space="preserve">
    <value>ドア有効化</value>
  </data>
  <data name="UpdateMealServicePrice" xml:space="preserve">
    <value>食事サービス価格の更新</value>
  </data>
  <data name="AddMaster" xml:space="preserve">
    <value>Add new master</value>
  </data>
  <data name="DeleteMaster" xml:space="preserve">
    <value>Delete existing master</value>
  </data>
  <data name="SetTime" xml:space="preserve">
    <value>Sync time</value>
  </data>
  <data name="ExportMaster" xml:space="preserve">
    <value>Export building masters</value>
  </data>
  <data name="ExportDoor" xml:space="preserve">
    <value>Export doors</value>
  </data>
</root>